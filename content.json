{"meta":{"title":"王学长","subtitle":"清醒的人最荒唐","description":"欢迎来到王学长的乐园","author":"王学长","url":"http://www.wangxuezhang.xin"},"pages":[{"title":"Tagcloud","date":"2017-12-27T08:04:12.766Z","updated":"2017-12-27T08:04:12.766Z","comments":true,"path":"tags.html","permalink":"http://www.wangxuezhang.xin/tags.html","excerpt":"","text":""},{"title":"categories","date":"2017-12-27T08:23:47.000Z","updated":"2017-12-27T13:57:17.372Z","comments":true,"path":"categories/index.html","permalink":"http://www.wangxuezhang.xin/categories/index.html","excerpt":"","text":"Python接入网技术"},{"title":"tags","date":"2017-12-27T08:55:42.000Z","updated":"2017-12-27T13:51:55.622Z","comments":true,"path":"tags/index-1.html","permalink":"http://www.wangxuezhang.xin/tags/index-1.html","excerpt":"","text":"Python接入网技术网络方面电脑疑难杂症CTF随笔"},{"title":"tags","date":"2017-12-27T08:18:20.000Z","updated":"2017-12-27T08:56:17.151Z","comments":true,"path":"tags/index.html","permalink":"http://www.wangxuezhang.xin/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Ubuntu下搭建owncloud私有云平台","slug":"Ubuntu下搭建owncloud私有云平台","date":"2018-03-27T10:30:13.000Z","updated":"2018-03-28T08:01:20.871Z","comments":true,"path":"2018/03/27/Ubuntu下搭建owncloud私有云平台/","link":"","permalink":"http://www.wangxuezhang.xin/2018/03/27/Ubuntu下搭建owncloud私有云平台/","excerpt":"","text":"owncloudownCloud是一个自由且开源的个人云存储解决方案(类似百度网盘或者Dropbox)，包括两个部分：服务器和客户端。 ownCloud在客户端可通过网页界面，或者安装专用的客户端软件来使用。网页界面当然就是任何能打开网页的平台都支持，而客户端软件也支持相当多平台，Windows、Linux、iOS、Android皆有。 除了云存储之外，ownCloud也可用于同步行事历、电子邮件联系人、网页浏览器的书签；此外还有多人在线文件同步协作的功能。 搭建的目的ftp服务器虽然能储存东西，但是不能在线预览。最近下载了一些教学视频，无奈自己笔记本硬盘太小，所以就想搭建一个能在线浏览pdf和视频的云平台。主要用于校园网里面。 环境搭建过程服务器：Ubuntu 16.04 IP:10.22.30.20····························第一步:安装apache2apt install apache2 -y 安装完成后，浏览器访问服务器地址出现以下界面代表安装成功 PS:注意防火墙开放80端口····························第二步:安装mysqlapt-get install mysql-server mysql-client -y安装过程中会要求设置数据库密码安装完成后 mysql -u root -p出现以下界面代表安装mysql安装成功····························第三步:安装phpmyadminapt-get install phpmyadmin出现下图界面选apache2 输入mysql的密码 安装完成后在浏览器访问10.22.30.20/phpmyadmin,账号是root，密码是mysql的密码 登录后创建数据库 ····························第四步:安装PHPapt-get install php -y owncloud服务端搭建解压下载好的owncloud-9.1.0.zip(可以去owncloud官网下载)unzip owncloud-9.1.0.zip将owncloud移动到/var/www/html 目录下root@wlzx:/home/wlzx# mv owncloud /var/www/html/建立数据文件夹，并赋予权限cd /var/www/html/owncloudroot@wlzx:/var/www/html/owncloud# mkdir dataroot@wlzx:/var/www/html/owncloud# chown -R www-data:www-data dataroot@wlzx:/var/www/html/owncloud# chown -R www-data:www-data configroot@wlzx:/var/www/html/owncloud# chown -R www-data:www-data apps····························修改apache2的配置文件vim /etc/apache2/apache2.conf重新启动模块 a2enmod rewrite a2enmod headers 重新启动apache2 sudo service apache2 restart ····························访问10.22.30.20/owncloud,发现少了两个模块安装curl模块root@wlzx:/var/www/html/owncloud# apt-get install php-curl -y安装zip模块root@wlzx:/var/www/html/owncloud/zip-1.13.5# apt-get install php-zip重启apache2服务root@wlzx:/var/www/html/owncloud/zip-1.13.5# /etc/init.d/apache2 restart再次访问10.22.30.20/owncloud，设置好管理员密码，数据库账号、密码、数据库名称 至此这个云服务器就能正常访问啦 修改上传限制由于owncloud默认现在最大上传大小为513M，有些大文件上传不了，所以需要修改一下配置文件(owncloud目录下的.htaccess 文件) 然后就能上传大文件了 owncloud还可以挂载ftp站点，添加一些其它的插件！","categories":[],"tags":[]},{"title":"shell 编程 备忘录","slug":"shell-编程-备忘录","date":"2018-03-23T12:09:16.000Z","updated":"2018-03-23T12:10:52.827Z","comments":true,"path":"2018/03/23/shell-编程-备忘录/","link":"","permalink":"http://www.wangxuezhang.xin/2018/03/23/shell-编程-备忘录/","excerpt":"复习一下shell编程 备忘 if 条件判断语句案例一 测试数字的大小12345#!/bin/bashNUM=100if (($NUM &gt; 4)); thenecho &quot;thi num is $NUM greater 4!&quot;fi [root@localhost shell]# bash 1.shthis num is 100 greater 4!","text":"复习一下shell编程 备忘 if 条件判断语句案例一 测试数字的大小12345#!/bin/bashNUM=100if (($NUM &gt; 4)); thenecho &quot;thi num is $NUM greater 4!&quot;fi [root@localhost shell]# bash 1.shthis num is 100 greater 4! 案例二 测速目录是否存在，不存在则新建12345#！/bin/bashif [! -d /root/test/wang]; thenmkdir -p /root/test/wangelse echo &quot;This dir is exist!!!&quot; [root@localhost shell]# bash testfile.shThis dir is exist!!!PS：若该目录不存在则会新建目录 逻辑运算符解析：-f 判断文件是否存在 eg: if [ -f filename ]-d 判断目录是否存在 eg: if [ -d dir ]-eq 等于 应用于：整型比较-ne 不等于 应用于：整型比较-lt 小于 应用于：整型比较-gt 大于 应用于：整型比较-le 小于或等于 应用于：整型比较-ge 大于或等于 应用于：整型比较-a 双方都成立（and） 逻辑表达式 –a 逻辑表达式-o 单方成立（or） 逻辑表达式 –o 逻辑表达式-z 空字符串 案例三 多个条件测试判断1234567891011#!/bin/bashs=80;if [[ $s -gt 85 ]] ; thenecho &quot;very good!&quot;;elif [[ $s -gt 75 ]] ; thenecho &quot;good!&quot;;elif [[ $s -gt 60 ]] ; then echo &quot;pass!&quot;;elseecho &quot;no pass!&quot;;fi [root@localhost shell]# bash many.shgood for 循环语句案例一 打印seq多个数12345#!/bin/bashfor i in `seq 5`do echo &quot;Num is $i&quot;done [root@localhost shell]# bash seq.shNum is 1Num is 2Num is 3Num is 4Num is 5 案例二 找到相关 log，然后批量打包12345#!/bin/bashfor i in `find /var/log -name &quot;*.log&quot;`do tar -czf 2018.tar $idone [root@localhost shell]# ls1.sh 2018log.tar log.sh many.sh seq.sh testfile.sh var while 循环语句案例一 while条件判断数字","categories":[],"tags":[]},{"title":"mysql双机热备的实现","slug":"mysql双机热备的实现","date":"2018-03-16T08:45:00.000Z","updated":"2018-03-17T14:59:10.774Z","comments":true,"path":"2018/03/16/mysql双机热备的实现/","link":"","permalink":"http://www.wangxuezhang.xin/2018/03/16/mysql双机热备的实现/","excerpt":"双机热备概念日常百度百科双机热备百度百科双机热备包括广义与狭义两种。从广义上讲，就是对于重要的服务，使用两台服务器，互相备份，共同执行同一服务。当一台服务器出现故障时，可以由另一台服务器承担服务任务，从而在不需要人工干预的情况下，自动保证系统能持续提供服务。","text":"双机热备概念日常百度百科双机热备百度百科双机热备包括广义与狭义两种。从广义上讲，就是对于重要的服务，使用两台服务器，互相备份，共同执行同一服务。当一台服务器出现故障时，可以由另一台服务器承担服务任务，从而在不需要人工干预的情况下，自动保证系统能持续提供服务。从狭义上讲，双机热备特指基于active/standby方式的服务器热备。服务器数据包括数据库数据同时往两台或多台服务器写，或者使用一个共享的存储设备。在同一时间内只有一台服务器运行。当其中运行着的一台服务器出现故障无法启动时，另一台备份服务器会通过软件诊测（一般是通过心跳诊断）将standby机器激活，保证应用在短时间内完全恢复正常使用。双机热备针对的是服务器的故障。服务器的故障可能由各种原因引起，如设备故障、操作系统故障、软件系统故障等等。一般地讲，在技术人员在现场的情况下，恢复服务器正常可能需要10分钟、几小时甚至几天。从实际经验上看，除非是简单地重启服务器（可能隐患仍然存在），否则往往需要几个小时以上。而如果技术人员不在现场，则恢复服务的时间就更长了。而对于一些重要系统而言，用户是很难忍受这样长时间的服务中断的。因此，就需要通过双机热备，来避免长时间的服务中断，保证系统长期、可靠的服务。决定是否使用双机热备，正确的方法是要分析一下系统的重要性以及对服务中断的容忍程度，以此决定是否使用双机热备。即，你的用户能容忍多长时间恢复服务，如果服务不能恢复会造成多大的影响。 主从复制环境搭建主服务器A：10.22.30.6(centos 7)从服务器B：10.22.30.7(centos 7)mysql:5.6.39(两台服务器都是一样的)这里配置的是主从服务器,其中同步的都是创建的test数据库mysql用户名test，密码123456 主服务器A上的配置1:先创建一个允许从服务器B连接数据库的用户test,密码12345612grant replication slave on *.* to &apos;test&apos;@&apos;10.22.30.7&apos; identified by &apos;123456&apos;;flush privileges; //刷新权限 创建好后在从服务器B上连接测试一下1mysql -h 10.22.30.6 -u root -p 123456 这样表示能连接成功PS:如果连接不进去可以检查一下A服务器上防火墙是否允许3306端口通过。2:在修改主服务器上A的/etc/my.cnf~]# vimlink1234![upload successful](/images/pasted-45.png)3:重启mysql服务,进入mysql查看状态```[root@localhost ~]# service mysqld restart ##重启mysql服务 查看master状态其中File和Position参数是配置从服务器需要的。4:把数据库的锁打开mysql&gt; unlock tables; 从服务器B上的配置1:修改从服务器B上mysql的配置文件~]# vimlink1234![upload successful](/images/pasted-47.png)2:重启mysql服务```[root@root ~]# service mysqld restart 3:指定同步位置slave; #先关闭同步服务```123![upload successful](/images/pasted-48.png)```mysql&gt;start slave;#开启同步服务 4:查看从服务器状态 Slave_IO_Running: YesSlave_SQL_Running: Yes代表同步设置成功。5:测试同步主服务器上在test数据库中创建两个表 从服务器上同步如下 到此mysql主从热备就配置完毕了！ 主主复制主从复制是从服务器同步主服务器，那么主主复制就是两台主机互为主从。下面开始配置 环境搭建环境还是接着用主从复制时候的环境，不过开始前要先把mysql的同步停止。 主服务器B上的配置1:先创建一个允许服务器A远程登录的用户grant replication slave on *.* to 'test'@'10.22.30.6' identified by '123456'1mysql&gt;flush privileges; 2:查看二进制名和位置 然后在主服务器A上填好相应的信息 主服务器A上的配置1:进入数据库，配置一下信息2:开启复制(B服务器上也要开) mysql&gt; start slave;3:查看是否配置成功 Slave_IO_Running:YesSlave_SQL_Runing:Yes代表配置成功 测试同步B服务器上创建stu表并插入数据查看A服务器上同步状态 参考看了很多博客，还是觉得这篇博客写的清楚，膜拜大佬那一叶随风","categories":[{"name":"mysql","slug":"mysql","permalink":"http://www.wangxuezhang.xin/categories/mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://www.wangxuezhang.xin/tags/mysql/"},{"name":"linux","slug":"linux","permalink":"http://www.wangxuezhang.xin/tags/linux/"}]},{"title":"centos 7.2 安装mysql5.7","slug":"centos-7-2-安装mysql5-7","date":"2018-03-13T09:24:00.000Z","updated":"2018-03-15T03:28:25.650Z","comments":true,"path":"2018/03/13/centos-7-2-安装mysql5-7/","link":"","permalink":"http://www.wangxuezhang.xin/2018/03/13/centos-7-2-安装mysql5-7/","excerpt":"","text":"1:wget http://repo.mysql.com/mysql57-community-release-el7-10.noarch.rpm2:rpm -Uvh mysql57-community-release-el7-10.noarch.rpm3:yum install -y mysql-community-server4:service mysqld start5:修改临时密码，mysql5.7安装后会有个随机的密码。查看临时密码grep &#39;temporary password&#39; /var/log/mysqld.log 这里我的密码是6:利用临时密码登录并且修改密码 因为是为了做测试，所以这里密码设置简单一点，但是由于设置简单会报错，所以修改一下规则。set global validate_password_policy=0;set global validate_password_length=1;然后尝试修改密码:ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;qweasd&#39;;设置好后就可以用设置好的密码登录了！出处：Centos7.3 安装Mysql5.7并修改初始密码","categories":[],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://www.wangxuezhang.xin/tags/mysql/"}]},{"title":"记录一次网络克隆的经验","slug":"记录一次网络克隆的经验","date":"2018-03-08T07:19:00.000Z","updated":"2018-03-11T08:43:14.721Z","comments":true,"path":"2018/03/08/记录一次网络克隆的经验/","link":"","permalink":"http://www.wangxuezhang.xin/2018/03/08/记录一次网络克隆的经验/","excerpt":"场景 学生上课的大机房，其中学生机114台，教师机一台。要求学生机上安装上课必备的一些软件，教师机能够控制所有学生机，并且学生机要做还原。显然是不可能一台一台手动去装的，这时就需要用到网络克隆了。","text":"场景 学生上课的大机房，其中学生机114台，教师机一台。要求学生机上安装上课必备的一些软件，教师机能够控制所有学生机，并且学生机要做还原。显然是不可能一台一台手动去装的，这时就需要用到网络克隆了。 网络克隆下面科普一下网络克隆（都是百度百科上的）网络克隆是一种短时间内在大批量电脑上安装操作系统的一种先进的方法，目前实现的方法主要有两种，一种是在客户机上面使用存放引导文件,这种方法灵活性不太好，另一种方法是使用支持PXE的网卡来从服务器上面下载引导文件，然后装入到客户机中特点：这种快速,大批量安装操作系统的方法越来越受到欢迎,因为,它脱离了以前那种逐台拆开机箱然后安装上光驱或者是用硬盘对拷的麻烦,并且以前的方式稍不注意就有可能因为插拨不当造成设备的损坏具体操作：网络方式所需要做的工作就是准备一台网络服务器,在一台电脑(客户机)上安装系统,然后把这台客户机的系统做成母盘,上传到服务器当中,其他的客户机硬盘分区,系统的安装就很简单了,只需要将客户机从网络引导,即可连接到服务器,轻松的进行系统的安装,其中网络引导指的是从网卡启动,这个需要网卡的支持,如果网卡不支持网络启动的话,那就只能从其他介质进行引导了,可以把引导程序放入到光盘,软盘,移动硬盘,U盘,存储卡等等设备当中,同样可以实现网克的目的。 操作流程(1):首先需要做一个做好的母机，母机上装好机房上课需要的软件。然后准备好maxdos软件(2):开始制作母机的镜像。打开教师机上的maxdos软件 PS：镜像文件路径需要自己选择合适的存放路径 保存好后点击网络设置 启动网卡会默认选择电脑网卡上的IP，所以根据自己喜好随意改，但是要保证启动网卡和起始IP在同一网段下！启动方案后是这样的 只要客户端开机选择网卡启动后连接上来以后点击发送就可以了，然后静静等待母盘制作完成(3):开始批量网络克隆(在开始之前，建议把机房的网络断掉，交换机上的DHCP什么的也都关掉，不然克隆的时候可能出现客服端一直在DHCP界面，找不到服务端分配的地址，容易冲突)设置方案 网络设置还是一样的，重点也是服务端(也就是这里的教师机)和客服端(学生机)在同一网段。 一切设置好之后，启动方案，把机房的电脑设置为网卡启动(不同机器设置方法不同，所以设置方法请自行百度)。机房电脑设置为网卡启动后，开机时会服务端会分配一个地址过去，并且会自动下载引导文件。当教师机上显示机器数目到了需要克隆的机器数目时就可以开始了。…..做的时候只拍下了这两张图片 静静等进度条到达百分百就ok了。中间有些部分没有图片，下次做的时候在补上！","categories":[],"tags":[]},{"title":"校园网拓扑图","slug":"校园网拓扑图","date":"2018-01-11T05:44:30.000Z","updated":"2018-01-13T07:01:23.296Z","comments":true,"path":"2018/01/11/校园网拓扑图/","link":"","permalink":"http://www.wangxuezhang.xin/2018/01/11/校园网拓扑图/","excerpt":"拓扑图如下: 题目要求如下：1.按照图中所示配置校园网内的vlan2.教学楼交换机配置pvst生成树 对于vlan100，阻塞教学楼交换机1的6号端口和教学楼交换机3的5号端口 对于vlan200，阻塞教学楼交换机2的6号端口和教学楼交换机3的7号端口3.校园网内主机通过DHCP获得IP地址4.校园网内互通，通过WiFi连接的校内主机可以通过域名访问www.hhtc.edu.cn5.校内主机不能访问财务处的主机，但是财务处主机2除外6.校园网设备上配置管理VLAN99，可以通过vty登录任何设备7.Router0 和 Router1之间配置帧中继点到点网络8.Router0 和 Router2之间配置ppp chap认证，密码hhtc9.在需要的网络设备上配置动态路由协议10.Router0上配置NAT,实现校园网内主机能够通过NAT转换后访问www.taobao.compc7能够访问www.hhtc.edu.cn","text":"拓扑图如下: 题目要求如下：1.按照图中所示配置校园网内的vlan2.教学楼交换机配置pvst生成树 对于vlan100，阻塞教学楼交换机1的6号端口和教学楼交换机3的5号端口 对于vlan200，阻塞教学楼交换机2的6号端口和教学楼交换机3的7号端口3.校园网内主机通过DHCP获得IP地址4.校园网内互通，通过WiFi连接的校内主机可以通过域名访问www.hhtc.edu.cn5.校内主机不能访问财务处的主机，但是财务处主机2除外6.校园网设备上配置管理VLAN99，可以通过vty登录任何设备7.Router0 和 Router1之间配置帧中继点到点网络8.Router0 和 Router2之间配置ppp chap认证，密码hhtc9.在需要的网络设备上配置动态路由协议10.Router0上配置NAT,实现校园网内主机能够通过NAT转换后访问www.taobao.compc7能够访问www.hhtc.edu.cn 设置VLAN先在三层交换机上设置所有的VLAN配置如下：1234567891011121314151617181920212223242526Switch#configure terminal Switch(config)#vlan 11Switch(config-vlan)#exitSwitch(config)#vlan 22Switch(config-vlan)#exitSwitch(config)#vlan 100Switch(config-vlan)#exitSwitch(config)#vlan 200Switch(config-vlan)#exitSwitch(config)#vlan 300Switch(config-vlan)#exitSwitch(config)#interface vlan 11Switch(config-if)#ip address 10.1.11.254 255.255.255.0 //设置vlan11的网关Switch(config-if)#exitSwitch(config)#interface vlan 22Switch(config-if)#ip address 10.1.22.254 255.255.255.0Switch(config-if)#exitSwitch(config)#interface vlan 100Switch(config-if)#ip address 10.2.0.254 255.255.128.0Switch(config-if)#exitSwitch(config)#interface vlan 200Switch(config-if)#ip address 10.2.128.254 255.255.128.0Switch(config-if)#exitSwitch(config)#interface vlan 300Switch(config-if)#ip address 10.3.0.254 255.255.0.0Switch(config)ip routing //记得开启这个功能，要不然不同VLAN间不能通信...... 设置DHCP这是在三层交换机上设置DHCP，在路由器上或者服务器上设置DHCP也是可以的配置如下：1234567891011121314151617181920212223242526272829设置VLAN11Switch(config)#ip dhcp pool vlan11 //设置相应的VLANSwitch(dhcp-config)#default-router 10.1.11.254 //设置VLAN对应的网关Switch(dhcp-config)#network 10.1.11.0 255.255.255.0 //设置分配的地址池Switch(dhcp-config)#dns-server 10.1.1.2 //设置默认的DNS地址Switch(dhcp-config)#exit设置VLAN22Switch(config)#ip dhcp pool vlan22Switch(dhcp-config)#default-router 10.1.22.254Switch(dhcp-config)#network 10.1.22.0 255.255.255.0Switch(dhcp-config)#dns-server 10.1.1.2设置VLAN100Switch(dhcp-config)#exitSwitch(config)#ip dhcp pool vlan100Switch(dhcp-config)#default-router 10.2.0.254Switch(dhcp-config)#network 10.2.0.0 255.255.128.0Switch(dhcp-config)#dns-server 10.1.1.2设置VLAN200Switch(dhcp-config)#exitSwitch(config)#ip dhcp pool vlan200Switch(dhcp-config)#default-router 10.2.128.254Switch(dhcp-config)#network 10.2.128.0 255.255.128.0Switch(dhcp-config)#dns-server 10.1.1.2设置VLAN300Switch(config)#ip dhcp pool vlan300Switch(dhcp-config)#default-router 10.3.0.254Switch(dhcp-config)#network 10.3.0.0 255.255.0.0Switch(dhcp-config)#dns-server 10.1.1.2Switch(config)#service dhcp 设置trunk把与交换机相连的接口全部设置为TRUNK模式TRUNK是端口汇聚的意思，允许交换机与交换机、交换机与路由器、主机与交换机或路由器之间通过两个或多个端口并行连接同时传输以提供更高带宽、更大吞吐量， 大幅度提供整个网络能力。VLAN TRUNK一般是你设置了多个VLAN后，想通过一个端口传输多个VLAN，这个后需要把该端口设置为TRUNK了。trunk 设置好后，pc机就能分配到相应的IP地址了如图所示： 并且不同VLAN间能直接通信 开启三层交换机的路由功能三层交换机与路由器相连的端口是24号端口，所以需要把三层交换机的端口改为路由端口，配置如下：12345678Switch(config)#interface fastEthernet 0/24Switch(config-if)#no switchport //改为路由接口Switch(config-if)#ip address 10.4.4.4 255.255.255.0 //设置接口的地址Switch(config)#exitSwitch(config)#ip route 0.0.0.0 0.0.0.0 fastEthernet 0/24 //配置默认路由Switch(config)#route eigrp 1Switch(config-router)#network 10.0.0.0Switch(config-router)#no auto-summary 这样在宿舍楼区域就能ping 10.4.4.4了。 Router0上的设置先设置网络中心的网关1234Router#configure terminal Router(config)#interface fastEthernet 0/0Router(config-if)#no shutdown //开启该端口Router(config-if)#ip address 10.1.1.254 255.255.255.0 然后让校园网与网络中心互通123456789101112Router(config)#interface fastEthernet 0/1Router(config-if)#no shutdown Router(config-if)#ip address 10.4.4.5 255.255.255.0 //设置端口1的地址Router(config-if)#exitRouter(config)#ip route 0.0.0.0 0.0.0.0 fastEthernet 0/0Router(config)#ip route 0.0.0.0 0.0.0.0 fastEthernet 0/1Router(config)#ip route 0.0.0.0 0.0.0.0 serial 0/0/0Router(config)#ip route 0.0.0.0 0.0.0.0 serial 0/0/1PS：为了方便，把所有接口的默认路由都设置了Router(config)#route eigrp 1 //选择eigrp协议Router(config-router)#network 10.0.0.0Router(config-router)#no auto-summary 测试结果如下： 宿舍楼的电脑能成功的访问www.hhtc.edu.cn至此，内网全部互通。 帧中继Router0 和 Router1之间配置帧中继点到点网络帧中继（Frame Relay, FR）是面向连接的第二层传输协议，帧中继是典型的包交换技术。相比而言，同样带宽的帧中继通信费用比 DDN 专线要低，而且允许用户在帧中继交换网络比较空闲的时候以高于 ISP 所承诺的速率进行传输。下面进行配置，先配置帧中继云 LMI选择cisco，DLCI值可以任意填写。Route0上的配置：1234567891011Router(config)#interface serial 0/0/0Router(config-if)#no shutdownRouter(config-if)#encapsulation frame-relay //封装帧中继 Router(config-if)#frame-relay lmi-type cisco //帧中继类型为ciscoRouter(config-if)#exitRouter(config)#interface serial 0/0/0.1 point-to-point //配置子接口为点对点模式Router(config-subif)#ip address 192.168.1.1 255.255.255.0Router(config-subif)#frame-relay interface-dlci 103 //dlci值填写刚刚设置好的dlci值启动eigrp路由，添加新的路由Router(config)#router eigrp 1Router(config-router)#network 192.168.1.0 Router1上的配置123456789101112131415161718Router(config)#interface serial 0/0/0Router(config-if)#no shutdownRouter(config-if)#encapsulation frame-relay //封装帧中继 Router(config-if)#frame-relay lmi-type cisco //帧中继类型为ciscoRouter(config-if)#exitRouter(config)#interface serial 0/0/0.1 point-to-point //配置子接口为点对点模式Router(config-subif)#ip address 192.168.1.2 255.255.255.0Router(config-subif)#frame-relay interface-dlci 301 //dlci值填写刚刚设置好的dlci值启动eigrp路由，添加新的路由Router(config)#router eigrp 1Router(config-router)#network 192.168.1.0顺便把taobao服务器的网关设置好吧Router(config)#interface fastEthernet 0/0Router(config-if)#ip address 172.16.1.254 255.255.255.0Router(config-if)#no shutdownRouter(config-if)#exitRouter(config)#router eigrp 1Router(config-router)#network 172.16.0.0 这样帧中继就配置好了，两个路由器就能互相ping通了 并且用show ip route 可以看到路由表 配置ACL整个网络都能互相通信了，接下来就配置ACL了。访问控制列表简称为 ACL，它使用包过滤技术，在路由器上读取第三层及第四层包头中的信息如源地址、目的地址、源端口、目的端口等，根据预先定义好的规则对包进行过滤，从而达到访问控制的目的。ACL 分很多种，不同场合应用不同种类的 ACL。这个场景中是要求:校内主机不能访问财务处的主机，但是财务处主机2除外","categories":[],"tags":[]},{"title":"思科CCNA大综合实验","slug":"思科CCN大综合实验","date":"2018-01-08T06:24:00.000Z","updated":"2018-01-09T11:43:58.861Z","comments":true,"path":"2018/01/08/思科CCN大综合实验/","link":"","permalink":"http://www.wangxuezhang.xin/2018/01/08/思科CCN大综合实验/","excerpt":"拓扑图如下： 思科模拟器上的是这样的 题目要求太多了，一点一点做起吧","text":"拓扑图如下： 思科模拟器上的是这样的 题目要求太多了，一点一点做起吧 Etherchannel之前没怎么见过这东西，不怎么熟悉，所以还说上百度百科Etherchannel题目要求是：做Etherchannel 捆绑Sw1 与Sw2 的F0/11,F0/12 接口. 要求使用Cisco PAGP 协议中的主动协商模式Sw1的配置：123Sw1(config)#interface range fastEthernet 0/11-12Sw1(config-if-range)#switchport mode trunk Sw1(config-if-range)#channel-group 1 mode desirable Sw2的配置跟Sw1的一样 管理vlan访问控制题目要求：在Sw1 上设置管理vlan 10, 地址为192.168.1.10/24; 管理vlan 20, 地址为192.168.2.10/24.做ACL 访问控制, 要求只有PC1/PC2 可以远程访问Sw1.这需要ACL，也就是访问控制列表，这里用到的是标准ACL配置如下：1234567891011Sw1(config)#interface vlan 10Sw1(config-if)#ip address 192.168.1.10 255.255.255.0 //设置vlan10的管理地址Sw1(config-if)#exitSw1(config)#interface vlan 20Sw1(config-if)#Sw1(config-if)#ip address 192.168.2.10 255.255.255.0 //设置vlan20的管理地址Sw1(config-if)#exitSw1(config)#access-list 1 permit host 192.168.1.1 //设置ACLSw1(config)#access-list 1 permit host 192.168.2.1 //设置ACLSw1(config)#line vty 0 15Sw1(config-line)#access-class 1 in 单臂路由用R1上的F1/0.10作为VLAN10的出口网关用R3上的F2/0.20作为VLAN20的出口网关 先上百度百科充实一下自己的知识：单臂路由（router-on-a-stick）是指在路由器的一个接口上通过配置子接口（或“逻辑接口”，并不存在真正物理接口）的方式，实现原来相互隔离的不同VLAN（虚拟局域网）之间的互联互通。优缺点：VLAN能有效分割局域网，实现各网络区域之间的访问控制。但现实中，往往需要配置某些VLAN之间的互联互通。比如，你的公司划分为领导层、销售部、财务部、人力部、科技部、审计部，并为不同部门配置了不同的VLAN，部门之间不能相互访问，有效保证了各部门的信息安全。但经常出现领导层需要跨越VLAN访问其他各个部门，这个功能就由单臂路由来实现。优点：实现不同vlan之间的通信，有助理解、学习VLAN原理和子接口概念。缺点：容易成为网络单点故障，配置稍有复杂，现实意义不大。 下面开始配置单臂路由：交换机SW1和SW2上已经在接口1和2上分别设置好了vlan10和vlan20只要配置路由器上的就好了R1上的配置1234567R1#configure terminalR1(config)#interface f1/0R1(config-if)#no shutdown //开启端口R1(config-if)#exitR1(config)#interface f1/0.10 //进入子接口R1(config-subif)#encpuslation dotlQ 10 //为子接口封装802.1Q 协议，10是VLAN号R1(config-subif)#ip address 192.168.1.254 255.255.255.0 //划分网关和子网掩码 R3上的配置1234567R3#configure terminalR3(config)#interface f1/0R3(config-if)#no shutdown //开启端口R3(config-if)#exitR3(config)#interface f1/0.20 //进入子接口R3(config-subif)#encpuslation dotlQ 20 //为子接口封装802.1Q 协议，20是VLAN号R1(config-subif)#ip address 192.168.2.254 255.255.255.0 //划分网关和子网掩码 RIPv2等价负载均衡等价负载均衡(Equal-Cost Load Sharing)：是将流量均等地分布到多条度量相同的路径上，RIP的Metric是跳数 OSPF题目要求：在R1/R2/R3/R4 上配置单区域(area 0)OSPF, 使得全网互通（R4与运营商R5的S0/0不宣告）OSPF:OSPF(Open Shortest Path First开放式最短路径优先）是一个内部网关协议(Interior Gateway Protocol，简称IGP），用于在单一自治系统（autonomous system，AS）内决策路由。是对链路状态路由协议的一种实现，隶属内部网关协议（IGP），故运作于自治系统内部。著名的迪克斯加算法(Dijkstra)被用来计算最短路径树。OSPF分为OSPFv2和OSPFv3两个版本,其中OSPFv2用在IPv4网络，OSPFv3用在IPv6网络。OSPFv2是由RFC 2328定义的，OSPFv3是由RFC 5340定义的。与RIP相比，OSPF是链路状态协议，而RIP是距离矢量协议。 不同厂商管理距离不同，思科OSPF的协议管理距离（AD）是110，华为OSPF的协议管理距离是10。更详细的解释可以直接上互动百科(OSPF):[http://www.baike.com/wiki/OSPF%E5%8D%8F%E8%AE%AE]然后是路由器的配置R1的配置：123456R1#configure tR1(config)#router ospf 1R1(config-router)#netwR1(config-router)#network 10.0.0.0 0.255.255.255 area 0R1(config-router)#network 172.16.0.0 0.255.255.255 area 0R1(config-router)#network 192.168.1.0 0.255.255.255 area 0 R2的配置：1234R2#configure terminal R2(config)#router ospf 1R2(config-router)#network 10.0.0.0 0.255.255.255 arR2(config-router)#network 10.0.0.0 0.255.255.255 area 0 R3的配置：12345R3#configure terminal R3(config)#router ospf 1R3(config-router)#network 10.0.0.0 0.255.255.255 area 0R3(config-router)#network 172.16.0.0 0.255.255.255 area 0R3(config-router)#network 192.168.2.0 0.255.255.255 area 0 R4的配置:123R4#configure terminal R4(config)#router ospf 1R4(config-router)#network 172.16.0.0 0.255.255.255 area 0 EIGRP题目要求:在R1/R2/R3/R4 上配置EIGRP( 关闭自动汇总), 使得全网互通. 要求使用反掩码宣告准确的接口地址[R4与运营商R5 的S0/0 接口不宣告]R1的配置：123456R1(config)#router eigrp 1R1(config-router)#no auto-summaryR1(config-router)#network 10.1.1.1 0.0.0.0R1(config-router)#network 10.10.10.11 0.0.0.0R1(config-router)#network 172.16.1.1 0.0.0.0R1(config-router)#network 192.168.1.254 0.0.0.0 R2的配置：1234R2(config)#router eigrp 1R2(config-router)#no auto-summaryR2(config-router)#network 10.1.1.2 0.0.0.0R2(config-router)#network 10.2.2.2 0.0.0.0 R3的配置:12345R3(config)#router eigrp 1R3(config-router)#no auto-summaryR3(config-router)#network 10.2.2.3 0.0.0.0R3(config-router)#network 172.16.2.3 0.0.0.0R3(config-router)#network 192.168.2.254 0.0.0.0 R4的配置:1234R4(config)#router eigrp 1R4(config-router)#no auto-summaryR4(config-router)#network 172.16.1.4 0.0.0.0R4(config-router)#network 172.16.2.4 0.0.0.0 EIGRP- 非等价负载均衡ACL题目要求：在R1上做ACL 访问限制: 所有用户都可以ping 通Server;除PC1 和PC4 以外, 其他用户都可以访问内部网站.R1上的配置:1234R1#configure terminal R1(config)#access-list 100 deny tcp host 192.168.1.1 host 10.10.10.10 eq www //禁止PC1访问服务器R1(config)#access-list 100 deny tcp host 192.168.2.2 host 10.10.10.10 eq www //禁止PC4访问服务器R1(config)#access-list 100 permit ip any any //允许其它的通过","categories":[{"name":"思科","slug":"思科","permalink":"http://www.wangxuezhang.xin/categories/思科/"}],"tags":[{"name":"思科","slug":"思科","permalink":"http://www.wangxuezhang.xin/tags/思科/"}]},{"title":"Python利用requests批量检测URL","slug":"Python利用requests批量检测URL","date":"2018-01-02T12:33:00.000Z","updated":"2018-01-02T13:00:29.506Z","comments":true,"path":"2018/01/02/Python利用requests批量检测URL/","link":"","permalink":"http://www.wangxuezhang.xin/2018/01/02/Python利用requests批量检测URL/","excerpt":"利用python的requests检测单个URL的返回值先安装所需要的requests库pip install requests 打开IDIE123import requestsresponse = requests.get(&quot;http://www.baidu.com&quot;)response.status_code PS: response.status_code=200表示服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。","text":"利用python的requests检测单个URL的返回值先安装所需要的requests库pip install requests 打开IDIE123import requestsresponse = requests.get(&quot;http://www.baidu.com&quot;)response.status_code PS: response.status_code=200表示服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。 批量检测URL直接上代码123456789101112131415161718192021import requestsheaders = &#123; &quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&quot;&#125;with open(&apos;sort1.txt&apos;,&apos;r&apos;) as file: urls = file.readlines() for url in urls: url = url.strip(&quot;\\n&quot;).strip(&quot;\\ufeff&quot;) try: response = requests.get(url,headers = headers,timeout = 3) if response.status_code == 200: print(&apos;success open++++&apos;+ url) with open(&apos;success.txt&apos;,&apos;a&apos;) as file1: success = file1.write(url+&apos;\\n&apos;) else: print(&apos;--------&apos;) except Exception as e: with open(&apos;failed.txt&apos;,&apos;w&apos;) as file2: error = file2.write(url + &quot;\\n&quot;) 这段代码中，把返回状态码为200的保存到了success.txt中，把异常的保存到了failed.txt中但是，它虽然能达到检测的效果，但是有时候运行起来特别慢，还得多学习优化的方法 后续：python还有其它方法也能检测URL的状态，日后会努力补上！","categories":[{"name":"python","slug":"python","permalink":"http://www.wangxuezhang.xin/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.wangxuezhang.xin/tags/python/"}]},{"title":"Python 生成不重复字符串组合","slug":"Python-生成不重复字符串组合","date":"2017-12-31T03:55:00.000Z","updated":"2017-12-31T04:20:54.405Z","comments":true,"path":"2017/12/31/Python-生成不重复字符串组合/","link":"","permalink":"http://www.wangxuezhang.xin/2017/12/31/Python-生成不重复字符串组合/","excerpt":"","text":"给出一个字符串，并利用python生成不重复字符串的所有组合12345import itertools words = &apos;4189t&apos; with open(&apos;sort1.txt&apos;,&apos;w&apos;) as file: for i in itertools.permutations(words,5): file.write(&quot;http://www.&quot;+&quot;&quot;.join(i)+&quot;.com\\n&quot;) 我这里是生成字符串’4189t’的所有不重复字符串的组合，并且把所有组合方式导入到文件sort1.txt中，””.join(i)前后加的东西是我需要保存的链接形式.","categories":[{"name":"python","slug":"python","permalink":"http://www.wangxuezhang.xin/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.wangxuezhang.xin/tags/python/"}]},{"title":"hexo s报错","slug":"hexo-s报错","date":"2017-12-30T06:06:00.000Z","updated":"2017-12-30T06:41:02.924Z","comments":true,"path":"2017/12/30/hexo-s报错/","link":"","permalink":"http://www.wangxuezhang.xin/2017/12/30/hexo-s报错/","excerpt":"想起来就心痛，昨天由于ubuntu上的vim配置出了点问题，于是就想卸载重装，但是插件太多，自己又想偷懒，就一个命令运行下来locate vimrc | xargs rm -rf删除后发现还是报错，就将错就错,又是一条命令下来locate vim | xargs rm -rf","text":"想起来就心痛，昨天由于ubuntu上的vim配置出了点问题，于是就想卸载重装，但是插件太多，自己又想偷懒，就一个命令运行下来locate vimrc | xargs rm -rf删除后发现还是报错，就将错就错,又是一条命令下来locate vim | xargs rm -rf就这样，成功的，我的vim重装后连insert都不显示了…… 费了好大功夫把vim装好后，准备运行hexo博客看一下FATAL Cannot find module &#39;./vimeo&#39; Error: Cannot find module &#39;./vimeo&#39; 结局是这样的,吓得我赶紧npm install重新安装依赖，但是还是没用npm install --save vimeo,命令是运行成功了，当然错误也是一样的…去度娘逛了一圈，没有发现有人跟我报错是一样的（应该没有人像我那么傻，那么冲动…）慌的我东西都备份好了，准备重装了，但是！！！重点来了，临死之前我的抢救还是成功了，npm install hexo --vimeo这样终于成功的安装好了这个模块,命令终于运行成功了，真是一把心酸一把泪啊！以后再也不敢乱用删除命令了！！！！","categories":[{"name":"hexo","slug":"hexo","permalink":"http://www.wangxuezhang.xin/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.wangxuezhang.xin/tags/hexo/"}]},{"title":"hexo写博客的基本方法","slug":"hexo写博客的基本方法","date":"2017-12-28T07:34:00.000Z","updated":"2017-12-31T04:16:32.539Z","comments":true,"path":"2017/12/28/hexo写博客的基本方法/","link":"","permalink":"http://www.wangxuezhang.xin/2017/12/28/hexo写博客的基本方法/","excerpt":"前言: 刚刚搭建好hexo博客，准备写第一篇博客的时候意识到了一些问题，可能是因为自己没怎么用过markdown这个编辑器，所以不怎么熟悉，但是通过各种百度后终于知道了该怎么便捷的写自己的博客 问题1：在哪里写博客？","text":"前言: 刚刚搭建好hexo博客，准备写第一篇博客的时候意识到了一些问题，可能是因为自己没怎么用过markdown这个编辑器，所以不怎么熟悉，但是通过各种百度后终于知道了该怎么便捷的写自己的博客 问题1：在哪里写博客？ 由于我的博客是搭在云服务器ubuntu上的，所以写博客的时候不可能直接进去用vim编辑吧，后面通过百度找到了解决办法 —安装hexo的admin后台 安装hexo后端管理插件npm install –save hexo-admin —安装插件hexo s —运行hexo服务器本地打开http://localhost:4000/admin/ 就可以看到后台啦 配置hexo后端管理插件完成上述配置后，打开后台是不需要密码的，为了安全性起见，需要设置后台账号和密码先进入后台，到setting中点击Setup authentification here进去之后是这样的 在里面输入对应的信息,下面就会生成相应的代码，例如: 把代码复制到hexo的_config.yml文件中，然后hexo s运行再进入后台就需要自己设置的账号和密码了 问题2：markdown的一些语法要求准备自己编辑文章的时候发现不知怎么用markdown来写文章，于是去查看Markdown 语法说明知道了怎么写小标题，举个例子 一个#就是以及标题，两个#就二级标题，也就是说几个#对应几级标题，需要注意的是输入#的时候颜色会变成蓝色，要在#后面空格输入后的内容才是标题 问题3：文中添加文字链接直接上图 [这是链接的标题](这是url)按照这个格式输入后就是点击链接标题就会跳转到相应的链接了 问题4：如何设置阅读全文next主题是默认展开全文的，文章多了就会显得特别繁琐，所以我们需要设置程这个样子 方法很简单，只要在你想断开的地方输入&lt;!--more--&gt;就行了 问题5：文中添加代码块单行代码只需在代码前后添加一个`多行代码需要在代码前后添加三个```","categories":[{"name":"hexo","slug":"hexo","permalink":"http://www.wangxuezhang.xin/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.wangxuezhang.xin/tags/hexo/"}]},{"title":"智动大闯关","slug":"智动大闯关","date":"2017-12-27T15:25:12.000Z","updated":"2017-12-27T15:34:04.706Z","comments":true,"path":"2017/12/27/智动大闯关/","link":"","permalink":"http://www.wangxuezhang.xin/2017/12/27/智动大闯关/","excerpt":"","text":"智动大闯关第22关firebug 查看源码发现 其中content里面的就是密码，直接提交进入第23关","categories":[{"name":"智动大闯关","slug":"智动大闯关","permalink":"http://www.wangxuezhang.xin/categories/智动大闯关/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://www.wangxuezhang.xin/tags/ctf/"}]},{"title":"阿里云ubuntu服务器搭建Hexo博客中遇到的问题","slug":"hello-world","date":"2017-12-27T09:28:00.000Z","updated":"2017-12-28T07:33:36.203Z","comments":true,"path":"2017/12/27/hello-world/","link":"","permalink":"http://www.wangxuezhang.xin/2017/12/27/hello-world/","excerpt":"搭建的环境:阿里云的Ubuntu16.04 服务器 搭建的流程:","text":"搭建的环境:阿里云的Ubuntu16.04 服务器 搭建的流程: 搭建过程中还是蛮顺利的，直接参照百度就能跟着搭建出来。但是搭建后hexo s 运行的时候出现了一个问题卡了蛮久的。hexo s 能正常运行，就是用电脑浏览器一直访问不了，换了各种端口都没用，关闭防火墙也没用。各种百度后找到了问题所在:就是阿里云服务器的安全组规则没有开启4000端口 根据要求把4000端口开启就行了然后就能通过IP访问刚刚建好的博客了，哈哈 搭建后主题方面的设置我选择的是next主题，参照hexo中文文档就next中文文档想进行一些特殊的设置可以参照 hexo的next主题个性化教程：打造炫酷网站一切搞好后，炫酷的博客就出炉啦","categories":[{"name":"hexo","slug":"hexo","permalink":"http://www.wangxuezhang.xin/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.wangxuezhang.xin/tags/hexo/"}]}]}