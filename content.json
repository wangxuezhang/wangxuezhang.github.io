{"meta":{"title":"王学长","subtitle":"清醒的人最荒唐","description":"欢迎来到王学长的乐园","author":"王学长","url":"http://www.wangxuezhang.xin"},"pages":[{"title":"Tagcloud","date":"2017-12-27T08:04:12.766Z","updated":"2017-12-27T08:04:12.766Z","comments":true,"path":"tags.html","permalink":"http://www.wangxuezhang.xin/tags.html","excerpt":"","text":""},{"title":"categories","date":"2017-12-27T08:23:47.000Z","updated":"2017-12-27T13:57:17.372Z","comments":true,"path":"categories/index.html","permalink":"http://www.wangxuezhang.xin/categories/index.html","excerpt":"","text":"Python接入网技术"},{"title":"tags","date":"2017-12-27T08:55:42.000Z","updated":"2017-12-27T13:51:55.622Z","comments":true,"path":"tags/index-1.html","permalink":"http://www.wangxuezhang.xin/tags/index-1.html","excerpt":"","text":"Python接入网技术网络方面电脑疑难杂症CTF随笔"},{"title":"tags","date":"2017-12-27T08:18:20.000Z","updated":"2017-12-27T08:56:17.151Z","comments":true,"path":"tags/index.html","permalink":"http://www.wangxuezhang.xin/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"思科CCNA大综合实验","slug":"思科CCN大综合实验","date":"2018-01-08T06:24:00.000Z","updated":"2018-01-09T11:43:58.861Z","comments":true,"path":"2018/01/08/思科CCN大综合实验/","link":"","permalink":"http://www.wangxuezhang.xin/2018/01/08/思科CCN大综合实验/","excerpt":"拓扑图如下： 思科模拟器上的是这样的 题目要求太多了，一点一点做起吧","text":"拓扑图如下： 思科模拟器上的是这样的 题目要求太多了，一点一点做起吧 Etherchannel之前没怎么见过这东西，不怎么熟悉，所以还说上百度百科Etherchannel题目要求是：做Etherchannel 捆绑Sw1 与Sw2 的F0/11,F0/12 接口. 要求使用Cisco PAGP 协议中的主动协商模式Sw1的配置：123Sw1(config)#interface range fastEthernet 0/11-12Sw1(config-if-range)#switchport mode trunk Sw1(config-if-range)#channel-group 1 mode desirable Sw2的配置跟Sw1的一样 管理vlan访问控制题目要求：在Sw1 上设置管理vlan 10, 地址为192.168.1.10/24; 管理vlan 20, 地址为192.168.2.10/24.做ACL 访问控制, 要求只有PC1/PC2 可以远程访问Sw1.这需要ACL，也就是访问控制列表，这里用到的是标准ACL配置如下：1234567891011Sw1(config)#interface vlan 10Sw1(config-if)#ip address 192.168.1.10 255.255.255.0 //设置vlan10的管理地址Sw1(config-if)#exitSw1(config)#interface vlan 20Sw1(config-if)#Sw1(config-if)#ip address 192.168.2.10 255.255.255.0 //设置vlan20的管理地址Sw1(config-if)#exitSw1(config)#access-list 1 permit host 192.168.1.1 //设置ACLSw1(config)#access-list 1 permit host 192.168.2.1 //设置ACLSw1(config)#line vty 0 15Sw1(config-line)#access-class 1 in 单臂路由用R1上的F1/0.10作为VLAN10的出口网关用R3上的F2/0.20作为VLAN20的出口网关 先上百度百科充实一下自己的知识：单臂路由（router-on-a-stick）是指在路由器的一个接口上通过配置子接口（或“逻辑接口”，并不存在真正物理接口）的方式，实现原来相互隔离的不同VLAN（虚拟局域网）之间的互联互通。优缺点：VLAN能有效分割局域网，实现各网络区域之间的访问控制。但现实中，往往需要配置某些VLAN之间的互联互通。比如，你的公司划分为领导层、销售部、财务部、人力部、科技部、审计部，并为不同部门配置了不同的VLAN，部门之间不能相互访问，有效保证了各部门的信息安全。但经常出现领导层需要跨越VLAN访问其他各个部门，这个功能就由单臂路由来实现。优点：实现不同vlan之间的通信，有助理解、学习VLAN原理和子接口概念。缺点：容易成为网络单点故障，配置稍有复杂，现实意义不大。 下面开始配置单臂路由：交换机SW1和SW2上已经在接口1和2上分别设置好了vlan10和vlan20只要配置路由器上的就好了R1上的配置1234567R1#configure terminalR1(config)#interface f1/0R1(config-if)#no shutdown //开启端口R1(config-if)#exitR1(config)#interface f1/0.10 //进入子接口R1(config-subif)#encpuslation dotlQ 10 //为子接口封装802.1Q 协议，10是VLAN号R1(config-subif)#ip address 192.168.1.254 255.255.255.0 //划分网关和子网掩码 R3上的配置1234567R3#configure terminalR3(config)#interface f1/0R3(config-if)#no shutdown //开启端口R3(config-if)#exitR3(config)#interface f1/0.20 //进入子接口R3(config-subif)#encpuslation dotlQ 20 //为子接口封装802.1Q 协议，20是VLAN号R1(config-subif)#ip address 192.168.2.254 255.255.255.0 //划分网关和子网掩码 RIPv2等价负载均衡等价负载均衡(Equal-Cost Load Sharing)：是将流量均等地分布到多条度量相同的路径上，RIP的Metric是跳数 OSPF题目要求：在R1/R2/R3/R4 上配置单区域(area 0)OSPF, 使得全网互通（R4与运营商R5的S0/0不宣告）OSPF:OSPF(Open Shortest Path First开放式最短路径优先）是一个内部网关协议(Interior Gateway Protocol，简称IGP），用于在单一自治系统（autonomous system，AS）内决策路由。是对链路状态路由协议的一种实现，隶属内部网关协议（IGP），故运作于自治系统内部。著名的迪克斯加算法(Dijkstra)被用来计算最短路径树。OSPF分为OSPFv2和OSPFv3两个版本,其中OSPFv2用在IPv4网络，OSPFv3用在IPv6网络。OSPFv2是由RFC 2328定义的，OSPFv3是由RFC 5340定义的。与RIP相比，OSPF是链路状态协议，而RIP是距离矢量协议。 不同厂商管理距离不同，思科OSPF的协议管理距离（AD）是110，华为OSPF的协议管理距离是10。更详细的解释可以直接上互动百科(OSPF):[http://www.baike.com/wiki/OSPF%E5%8D%8F%E8%AE%AE]然后是路由器的配置R1的配置：123456R1#configure tR1(config)#router ospf 1R1(config-router)#netwR1(config-router)#network 10.0.0.0 0.255.255.255 area 0R1(config-router)#network 172.16.0.0 0.255.255.255 area 0R1(config-router)#network 192.168.1.0 0.255.255.255 area 0 R2的配置：1234R2#configure terminal R2(config)#router ospf 1R2(config-router)#network 10.0.0.0 0.255.255.255 arR2(config-router)#network 10.0.0.0 0.255.255.255 area 0 R3的配置：12345R3#configure terminal R3(config)#router ospf 1R3(config-router)#network 10.0.0.0 0.255.255.255 area 0R3(config-router)#network 172.16.0.0 0.255.255.255 area 0R3(config-router)#network 192.168.2.0 0.255.255.255 area 0 R4的配置:123R4#configure terminal R4(config)#router ospf 1R4(config-router)#network 172.16.0.0 0.255.255.255 area 0 EIGRP题目要求:在R1/R2/R3/R4 上配置EIGRP( 关闭自动汇总), 使得全网互通. 要求使用反掩码宣告准确的接口地址[R4与运营商R5 的S0/0 接口不宣告]R1的配置：123456R1(config)#router eigrp 1R1(config-router)#no auto-summaryR1(config-router)#network 10.1.1.1 0.0.0.0R1(config-router)#network 10.10.10.11 0.0.0.0R1(config-router)#network 172.16.1.1 0.0.0.0R1(config-router)#network 192.168.1.254 0.0.0.0 R2的配置：1234R2(config)#router eigrp 1R2(config-router)#no auto-summaryR2(config-router)#network 10.1.1.2 0.0.0.0R2(config-router)#network 10.2.2.2 0.0.0.0 R3的配置:12345R3(config)#router eigrp 1R3(config-router)#no auto-summaryR3(config-router)#network 10.2.2.3 0.0.0.0R3(config-router)#network 172.16.2.3 0.0.0.0R3(config-router)#network 192.168.2.254 0.0.0.0 R4的配置:1234R4(config)#router eigrp 1R4(config-router)#no auto-summaryR4(config-router)#network 172.16.1.4 0.0.0.0R4(config-router)#network 172.16.2.4 0.0.0.0 EIGRP- 非等价负载均衡ACL题目要求：在R1上做ACL 访问限制: 所有用户都可以ping 通Server;除PC1 和PC4 以外, 其他用户都可以访问内部网站.R1上的配置:1234R1#configure terminal R1(config)#access-list 100 deny tcp host 192.168.1.1 host 10.10.10.10 eq www //禁止PC1访问服务器R1(config)#access-list 100 deny tcp host 192.168.2.2 host 10.10.10.10 eq www //禁止PC4访问服务器R1(config)#access-list 100 permit ip any any //允许其它的通过","categories":[{"name":"思科","slug":"思科","permalink":"http://www.wangxuezhang.xin/categories/思科/"}],"tags":[{"name":"思科","slug":"思科","permalink":"http://www.wangxuezhang.xin/tags/思科/"}]},{"title":"Python利用requests批量检测URL","slug":"Python利用requests批量检测URL","date":"2018-01-02T12:33:00.000Z","updated":"2018-01-02T13:00:29.506Z","comments":true,"path":"2018/01/02/Python利用requests批量检测URL/","link":"","permalink":"http://www.wangxuezhang.xin/2018/01/02/Python利用requests批量检测URL/","excerpt":"利用python的requests检测单个URL的返回值先安装所需要的requests库pip install requests 打开IDIE123import requestsresponse = requests.get(&quot;http://www.baidu.com&quot;)response.status_code PS: response.status_code=200表示服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。","text":"利用python的requests检测单个URL的返回值先安装所需要的requests库pip install requests 打开IDIE123import requestsresponse = requests.get(&quot;http://www.baidu.com&quot;)response.status_code PS: response.status_code=200表示服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。 批量检测URL直接上代码123456789101112131415161718192021import requestsheaders = &#123; &quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&quot;&#125;with open(&apos;sort1.txt&apos;,&apos;r&apos;) as file: urls = file.readlines() for url in urls: url = url.strip(&quot;\\n&quot;).strip(&quot;\\ufeff&quot;) try: response = requests.get(url,headers = headers,timeout = 3) if response.status_code == 200: print(&apos;success open++++&apos;+ url) with open(&apos;success.txt&apos;,&apos;a&apos;) as file1: success = file1.write(url+&apos;\\n&apos;) else: print(&apos;--------&apos;) except Exception as e: with open(&apos;failed.txt&apos;,&apos;w&apos;) as file2: error = file2.write(url + &quot;\\n&quot;) 这段代码中，把返回状态码为200的保存到了success.txt中，把异常的保存到了failed.txt中但是，它虽然能达到检测的效果，但是有时候运行起来特别慢，还得多学习优化的方法 后续：python还有其它方法也能检测URL的状态，日后会努力补上！","categories":[{"name":"python","slug":"python","permalink":"http://www.wangxuezhang.xin/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.wangxuezhang.xin/tags/python/"}]},{"title":"Python 生成不重复字符串组合","slug":"Python-生成不重复字符串组合","date":"2017-12-31T03:55:00.000Z","updated":"2017-12-31T04:20:54.405Z","comments":true,"path":"2017/12/31/Python-生成不重复字符串组合/","link":"","permalink":"http://www.wangxuezhang.xin/2017/12/31/Python-生成不重复字符串组合/","excerpt":"","text":"给出一个字符串，并利用python生成不重复字符串的所有组合12345import itertools words = &apos;4189t&apos; with open(&apos;sort1.txt&apos;,&apos;w&apos;) as file: for i in itertools.permutations(words,5): file.write(&quot;http://www.&quot;+&quot;&quot;.join(i)+&quot;.com\\n&quot;) 我这里是生成字符串’4189t’的所有不重复字符串的组合，并且把所有组合方式导入到文件sort1.txt中，””.join(i)前后加的东西是我需要保存的链接形式.","categories":[{"name":"python","slug":"python","permalink":"http://www.wangxuezhang.xin/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.wangxuezhang.xin/tags/python/"}]},{"title":"hexo s报错","slug":"hexo-s报错","date":"2017-12-30T06:06:00.000Z","updated":"2017-12-30T06:41:02.924Z","comments":true,"path":"2017/12/30/hexo-s报错/","link":"","permalink":"http://www.wangxuezhang.xin/2017/12/30/hexo-s报错/","excerpt":"想起来就心痛，昨天由于ubuntu上的vim配置出了点问题，于是就想卸载重装，但是插件太多，自己又想偷懒，就一个命令运行下来locate vimrc | xargs rm -rf删除后发现还是报错，就将错就错,又是一条命令下来locate vim | xargs rm -rf","text":"想起来就心痛，昨天由于ubuntu上的vim配置出了点问题，于是就想卸载重装，但是插件太多，自己又想偷懒，就一个命令运行下来locate vimrc | xargs rm -rf删除后发现还是报错，就将错就错,又是一条命令下来locate vim | xargs rm -rf就这样，成功的，我的vim重装后连insert都不显示了…… 费了好大功夫把vim装好后，准备运行hexo博客看一下FATAL Cannot find module &#39;./vimeo&#39; Error: Cannot find module &#39;./vimeo&#39; 结局是这样的,吓得我赶紧npm install重新安装依赖，但是还是没用npm install --save vimeo,命令是运行成功了，当然错误也是一样的…去度娘逛了一圈，没有发现有人跟我报错是一样的（应该没有人像我那么傻，那么冲动…）慌的我东西都备份好了，准备重装了，但是！！！重点来了，临死之前我的抢救还是成功了，npm install hexo --vimeo这样终于成功的安装好了这个模块,命令终于运行成功了，真是一把心酸一把泪啊！以后再也不敢乱用删除命令了！！！！","categories":[{"name":"hexo","slug":"hexo","permalink":"http://www.wangxuezhang.xin/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.wangxuezhang.xin/tags/hexo/"}]},{"title":"hexo写博客的基本方法","slug":"hexo写博客的基本方法","date":"2017-12-28T07:34:00.000Z","updated":"2017-12-31T04:16:32.539Z","comments":true,"path":"2017/12/28/hexo写博客的基本方法/","link":"","permalink":"http://www.wangxuezhang.xin/2017/12/28/hexo写博客的基本方法/","excerpt":"前言: 刚刚搭建好hexo博客，准备写第一篇博客的时候意识到了一些问题，可能是因为自己没怎么用过markdown这个编辑器，所以不怎么熟悉，但是通过各种百度后终于知道了该怎么便捷的写自己的博客 问题1：在哪里写博客？","text":"前言: 刚刚搭建好hexo博客，准备写第一篇博客的时候意识到了一些问题，可能是因为自己没怎么用过markdown这个编辑器，所以不怎么熟悉，但是通过各种百度后终于知道了该怎么便捷的写自己的博客 问题1：在哪里写博客？ 由于我的博客是搭在云服务器ubuntu上的，所以写博客的时候不可能直接进去用vim编辑吧，后面通过百度找到了解决办法 —安装hexo的admin后台 安装hexo后端管理插件npm install –save hexo-admin —安装插件hexo s —运行hexo服务器本地打开http://localhost:4000/admin/ 就可以看到后台啦 配置hexo后端管理插件完成上述配置后，打开后台是不需要密码的，为了安全性起见，需要设置后台账号和密码先进入后台，到setting中点击Setup authentification here进去之后是这样的 在里面输入对应的信息,下面就会生成相应的代码，例如: 把代码复制到hexo的_config.yml文件中，然后hexo s运行再进入后台就需要自己设置的账号和密码了 问题2：markdown的一些语法要求准备自己编辑文章的时候发现不知怎么用markdown来写文章，于是去查看Markdown 语法说明知道了怎么写小标题，举个例子 一个#就是以及标题，两个#就二级标题，也就是说几个#对应几级标题，需要注意的是输入#的时候颜色会变成蓝色，要在#后面空格输入后的内容才是标题 问题3：文中添加文字链接直接上图 [这是链接的标题](这是url)按照这个格式输入后就是点击链接标题就会跳转到相应的链接了 问题4：如何设置阅读全文next主题是默认展开全文的，文章多了就会显得特别繁琐，所以我们需要设置程这个样子 方法很简单，只要在你想断开的地方输入&lt;!--more--&gt;就行了 问题5：文中添加代码块单行代码只需在代码前后添加一个`多行代码需要在代码前后添加三个```","categories":[{"name":"hexo","slug":"hexo","permalink":"http://www.wangxuezhang.xin/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.wangxuezhang.xin/tags/hexo/"}]},{"title":"智动大闯关","slug":"智动大闯关","date":"2017-12-27T15:25:12.000Z","updated":"2017-12-27T15:34:04.706Z","comments":true,"path":"2017/12/27/智动大闯关/","link":"","permalink":"http://www.wangxuezhang.xin/2017/12/27/智动大闯关/","excerpt":"","text":"智动大闯关第22关firebug 查看源码发现 其中content里面的就是密码，直接提交进入第23关","categories":[{"name":"智动大闯关","slug":"智动大闯关","permalink":"http://www.wangxuezhang.xin/categories/智动大闯关/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://www.wangxuezhang.xin/tags/ctf/"}]},{"title":"阿里云ubuntu服务器搭建Hexo博客中遇到的问题","slug":"hello-world","date":"2017-12-27T09:28:00.000Z","updated":"2017-12-28T07:33:36.203Z","comments":true,"path":"2017/12/27/hello-world/","link":"","permalink":"http://www.wangxuezhang.xin/2017/12/27/hello-world/","excerpt":"搭建的环境:阿里云的Ubuntu16.04 服务器 搭建的流程:","text":"搭建的环境:阿里云的Ubuntu16.04 服务器 搭建的流程: 搭建过程中还是蛮顺利的，直接参照百度就能跟着搭建出来。但是搭建后hexo s 运行的时候出现了一个问题卡了蛮久的。hexo s 能正常运行，就是用电脑浏览器一直访问不了，换了各种端口都没用，关闭防火墙也没用。各种百度后找到了问题所在:就是阿里云服务器的安全组规则没有开启4000端口 根据要求把4000端口开启就行了然后就能通过IP访问刚刚建好的博客了，哈哈 搭建后主题方面的设置我选择的是next主题，参照hexo中文文档就next中文文档想进行一些特殊的设置可以参照 hexo的next主题个性化教程：打造炫酷网站一切搞好后，炫酷的博客就出炉啦","categories":[{"name":"hexo","slug":"hexo","permalink":"http://www.wangxuezhang.xin/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.wangxuezhang.xin/tags/hexo/"}]}]}