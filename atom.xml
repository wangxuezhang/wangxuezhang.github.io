<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王学长</title>
  
  <subtitle>清醒的人最荒唐</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.wangxuezhang.xin/"/>
  <updated>2018-01-02T13:00:29.506Z</updated>
  <id>http://www.wangxuezhang.xin/</id>
  
  <author>
    <name>王学长</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python利用requests批量检测URL</title>
    <link href="http://www.wangxuezhang.xin/2018/01/02/Python%E5%88%A9%E7%94%A8requests%E6%89%B9%E9%87%8F%E6%A3%80%E6%B5%8BURL/"/>
    <id>http://www.wangxuezhang.xin/2018/01/02/Python利用requests批量检测URL/</id>
    <published>2018-01-02T12:33:00.000Z</published>
    <updated>2018-01-02T13:00:29.506Z</updated>
    
    <content type="html"><![CDATA[<h5 id="利用python的requests检测单个URL的返回值"><a href="#利用python的requests检测单个URL的返回值" class="headerlink" title="利用python的requests检测单个URL的返回值"></a>利用python的requests检测单个URL的返回值</h5><p>先安装所需要的requests库<br><code>pip install requests</code></p><p><img src="/images/pasted-14.png" alt="upload successful"></p><p>打开IDIE<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">response = requests.get(&quot;http://www.baidu.com&quot;)</span><br><span class="line">response.status_code</span><br></pre></td></tr></table></figure></p><p><img src="/images/pasted-16.png" alt="upload successful"><br>PS: response.status_code=200表示服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。<br><a id="more"></a></p><h5 id="批量检测URL"><a href="#批量检测URL" class="headerlink" title="批量检测URL"></a>批量检测URL</h5><p>直接上代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    &quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">with open(&apos;sort1.txt&apos;,&apos;r&apos;) as file:</span><br><span class="line">    urls = file.readlines()</span><br><span class="line">    for url in urls:</span><br><span class="line">        url = url.strip(&quot;\n&quot;).strip(&quot;\ufeff&quot;)</span><br><span class="line">        try:</span><br><span class="line">            response = requests.get(url,headers = headers,timeout = 3)</span><br><span class="line">            if response.status_code == 200:</span><br><span class="line">                print(&apos;success open++++&apos;+ url)</span><br><span class="line">                with open(&apos;success.txt&apos;,&apos;a&apos;) as file1:</span><br><span class="line">                    success = file1.write(url+&apos;\n&apos;)</span><br><span class="line">            else:</span><br><span class="line">                print(&apos;--------&apos;)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            with open(&apos;failed.txt&apos;,&apos;w&apos;) as file2:</span><br><span class="line">                error = file2.write(url + &quot;\n&quot;)</span><br></pre></td></tr></table></figure></p><p>这段代码中，把返回状态码为200的保存到了success.txt中，把异常的保存到了failed.txt中<br>但是，它虽然能达到检测的效果，但是有时候运行起来特别慢，还得多学习优化的方法</p><p>后续：<br>python还有其它方法也能检测URL的状态，日后会努力补上！</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;利用python的requests检测单个URL的返回值&quot;&gt;&lt;a href=&quot;#利用python的requests检测单个URL的返回值&quot; class=&quot;headerlink&quot; title=&quot;利用python的requests检测单个URL的返回值&quot;&gt;&lt;/a&gt;利用python的requests检测单个URL的返回值&lt;/h5&gt;&lt;p&gt;先安装所需要的requests库&lt;br&gt;&lt;code&gt;pip install requests&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-14.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
&lt;p&gt;打开IDIE&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response = requests.get(&amp;quot;http://www.baidu.com&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.status_code&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-16.png&quot; alt=&quot;upload successful&quot;&gt;&lt;br&gt;PS: response.status_code=200表示服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://www.wangxuezhang.xin/categories/python/"/>
    
    
      <category term="python" scheme="http://www.wangxuezhang.xin/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 生成不重复字符串组合</title>
    <link href="http://www.wangxuezhang.xin/2017/12/31/Python-%E7%94%9F%E6%88%90%E4%B8%8D%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%84%E5%90%88/"/>
    <id>http://www.wangxuezhang.xin/2017/12/31/Python-生成不重复字符串组合/</id>
    <published>2017-12-31T03:55:00.000Z</published>
    <updated>2017-12-31T04:20:54.405Z</updated>
    
    <content type="html"><![CDATA[<p>给出一个字符串，并利用python生成不重复字符串的所有组合<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import itertools  </span><br><span class="line">words = &apos;4189t&apos;  </span><br><span class="line">with open(&apos;sort1.txt&apos;,&apos;w&apos;) as file:</span><br><span class="line">    for i in itertools.permutations(words,5):</span><br><span class="line">        file.write(&quot;http://www.&quot;+&quot;&quot;.join(i)+&quot;.com\n&quot;)</span><br></pre></td></tr></table></figure></p><p> 我这里是生成字符串’4189t’的所有不重复字符串的组合，并且把所有组合方式导入到文件sort1.txt中，””.join(i)前后加的东西是我需要保存的链接形式.</p><p><img src="/images/pasted-13.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;给出一个字符串，并利用python生成不重复字符串的所有组合&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
      <category term="python" scheme="http://www.wangxuezhang.xin/categories/python/"/>
    
    
      <category term="python" scheme="http://www.wangxuezhang.xin/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>hexo s报错</title>
    <link href="http://www.wangxuezhang.xin/2017/12/30/hexo-s%E6%8A%A5%E9%94%99/"/>
    <id>http://www.wangxuezhang.xin/2017/12/30/hexo-s报错/</id>
    <published>2017-12-30T06:06:00.000Z</published>
    <updated>2017-12-30T06:41:02.924Z</updated>
    
    <content type="html"><![CDATA[<p>想起来就心痛，昨天由于ubuntu上的vim配置出了点问题，于是就想卸载重装，但是插件太多，自己又想偷懒，就一个命令运行下来<br><code>locate vimrc | xargs rm -rf</code><br>删除后发现还是报错，就将错就错,又是一条命令下来<br><code>locate vim | xargs rm -rf</code><br><a id="more"></a><br>就这样，成功的，我的vim重装后连insert都不显示了……</p><p><img src="/images/pasted-12.png" alt="upload successful"><br>费了好大功夫把vim装好后，准备运行hexo博客看一下<br><code>FATAL Cannot find module &#39;./vimeo&#39;Error: Cannot find module &#39;./vimeo&#39;</code></p><p><img src="/images/pasted-11.png" alt="upload successful"><br>结局是这样的,吓得我赶紧<code>npm install</code>重新安装依赖，但是还是没用<br><code>npm install --save vimeo</code>,命令是运行成功了，当然错误也是一样的…<br>去度娘逛了一圈，没有发现有人跟我报错是一样的（应该没有人像我那么傻，那么冲动…）<br>慌的我东西都备份好了，准备重装了，但是！！！重点来了，临死之前我的抢救还是成功了，<br><code>npm install hexo --vimeo</code><br>这样终于成功的安装好了这个模块,命令终于运行成功了，真是一把心酸一把泪啊！<br>以后再也不敢乱用删除命令了！！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想起来就心痛，昨天由于ubuntu上的vim配置出了点问题，于是就想卸载重装，但是插件太多，自己又想偷懒，就一个命令运行下来&lt;br&gt;&lt;code&gt;locate vimrc | xargs rm -rf&lt;/code&gt;&lt;br&gt;删除后发现还是报错，就将错就错,又是一条命令下来&lt;br&gt;&lt;code&gt;locate vim | xargs rm -rf&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.wangxuezhang.xin/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.wangxuezhang.xin/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo写博客的基本方法</title>
    <link href="http://www.wangxuezhang.xin/2017/12/28/hexo%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E6%B3%95/"/>
    <id>http://www.wangxuezhang.xin/2017/12/28/hexo写博客的基本方法/</id>
    <published>2017-12-28T07:34:00.000Z</published>
    <updated>2017-12-31T04:16:32.539Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h2><p>  刚刚搭建好hexo博客，准备写第一篇博客的时候意识到了一些问题，可能是因为自己没怎么用过markdown这个编辑器，所以不怎么熟悉，但是通过各种百度后终于知道了该怎么便捷的写自己的博客</p><h4 id="问题1：在哪里写博客？"><a href="#问题1：在哪里写博客？" class="headerlink" title="问题1：在哪里写博客？"></a>问题1：在哪里写博客？</h4><a id="more"></a><p>由于我的博客是搭在云服务器ubuntu上的，所以写博客的时候不可能直接进去用vim编辑吧，后面通过百度找到了解决办法 —安装hexo的admin后台</p><h6 id="安装hexo后端管理插件"><a href="#安装hexo后端管理插件" class="headerlink" title="安装hexo后端管理插件"></a>安装hexo后端管理插件</h6><p>npm install –save hexo-admin  —安装插件<br>hexo s                 —运行hexo服务器<br>本地打开<a href="http://localhost:4000/admin/" target="_blank" rel="noopener">http://localhost:4000/admin/</a> 就可以看到后台啦</p><h5 id="配置hexo后端管理插件"><a href="#配置hexo后端管理插件" class="headerlink" title="配置hexo后端管理插件"></a>配置hexo后端管理插件</h5><p>完成上述配置后，打开后台是不需要密码的，为了安全性起见，需要设置后台账号和密码<br>先进入后台，到setting中点击Setup authentification here<br><img src="/images/pasted-5.png" alt="upload successful"><br>进去之后是这样的</p><p><img src="/images/pasted-6.png" alt="upload successful"><br>在里面输入对应的信息,下面就会生成相应的代码，例如:</p><p><img src="/images/pasted-7.png" alt="upload successful"><br>把代码复制到hexo的_config.yml文件中，然后hexo s运行再进入后台就需要自己设置的账号和密码了</p><h4 id="问题2：markdown的一些语法要求"><a href="#问题2：markdown的一些语法要求" class="headerlink" title="问题2：markdown的一些语法要求"></a>问题2：markdown的一些语法要求</h4><p>准备自己编辑文章的时候发现不知怎么用markdown来写文章，于是去查看<a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">Markdown 语法说明</a><br>知道了怎么写小标题，举个例子</p><p><img src="/images/pasted-8.png" alt="upload successful"><br>一个#就是以及标题，两个#就二级标题，也就是说几个#对应几级标题，需要注意的是输入#的时候颜色会变成蓝色，要在#后面空格输入后的内容才是标题</p><h4 id="问题3：文中添加文字链接"><a href="#问题3：文中添加文字链接" class="headerlink" title="问题3：文中添加文字链接"></a>问题3：文中添加文字链接</h4><p>直接上图</p><p><img src="/images/pasted-9.png" alt="upload successful"></p><p><code>[这是链接的标题](这是url)</code><br>按照这个格式输入后就是点击链接标题就会跳转到相应的链接了</p><h4 id="问题4：如何设置阅读全文"><a href="#问题4：如何设置阅读全文" class="headerlink" title="问题4：如何设置阅读全文"></a>问题4：如何设置阅读全文</h4><p>next主题是默认展开全文的，文章多了就会显得特别繁琐，所以我们需要设置程这个样子</p><p><img src="/images/pasted-10.png" alt="upload successful"><br>方法很简单，只要在你想断开的地方输入<br><code>&lt;!--more--&gt;</code>就行了</p><h4 id="问题5：文中添加代码块"><a href="#问题5：文中添加代码块" class="headerlink" title="问题5：文中添加代码块"></a>问题5：文中添加代码块</h4><p>单行代码只需在代码前后添加一个`<br>多行代码需要在代码前后添加三个```</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言:&quot;&gt;&lt;/a&gt;前言:&lt;/h2&gt;&lt;p&gt;  刚刚搭建好hexo博客，准备写第一篇博客的时候意识到了一些问题，可能是因为自己没怎么用过markdown这个编辑器，所以不怎么熟悉，但是通过各种百度后终于知道了该怎么便捷的写自己的博客&lt;/p&gt;
&lt;h4 id=&quot;问题1：在哪里写博客？&quot;&gt;&lt;a href=&quot;#问题1：在哪里写博客？&quot; class=&quot;headerlink&quot; title=&quot;问题1：在哪里写博客？&quot;&gt;&lt;/a&gt;问题1：在哪里写博客？&lt;/h4&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.wangxuezhang.xin/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.wangxuezhang.xin/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>智动大闯关</title>
    <link href="http://www.wangxuezhang.xin/2017/12/27/%E6%99%BA%E5%8A%A8%E5%A4%A7%E9%97%AF%E5%85%B3/"/>
    <id>http://www.wangxuezhang.xin/2017/12/27/智动大闯关/</id>
    <published>2017-12-27T15:25:12.000Z</published>
    <updated>2017-12-27T15:34:04.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="智动大闯关第22关"><a href="#智动大闯关第22关" class="headerlink" title="智动大闯关第22关"></a>智动大闯关第22关</h2><p><img src="/images/pasted-1.png" alt="upload successful"><br>firebug 查看源码发现</p><p><img src="/images/pasted-3.png" alt="upload successful"><br>其中content里面的就是密码，直接提交进入第23关</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;智动大闯关第22关&quot;&gt;&lt;a href=&quot;#智动大闯关第22关&quot; class=&quot;headerlink&quot; title=&quot;智动大闯关第22关&quot;&gt;&lt;/a&gt;智动大闯关第22关&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-1.png&quot; alt=&quot;uploa
      
    
    </summary>
    
      <category term="智动大闯关" scheme="http://www.wangxuezhang.xin/categories/%E6%99%BA%E5%8A%A8%E5%A4%A7%E9%97%AF%E5%85%B3/"/>
    
    
      <category term="ctf" scheme="http://www.wangxuezhang.xin/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>阿里云ubuntu服务器搭建Hexo博客中遇到的问题</title>
    <link href="http://www.wangxuezhang.xin/2017/12/27/hello-world/"/>
    <id>http://www.wangxuezhang.xin/2017/12/27/hello-world/</id>
    <published>2017-12-27T09:28:00.000Z</published>
    <updated>2017-12-28T07:33:36.203Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建的环境"><a href="#搭建的环境" class="headerlink" title="搭建的环境:"></a>搭建的环境:</h2><p>阿里云的Ubuntu16.04 服务器</p><h2 id="搭建的流程"><a href="#搭建的流程" class="headerlink" title="搭建的流程:"></a>搭建的流程:</h2><a id="more"></a><p>搭建过程中还是蛮顺利的，直接参照百度就能跟着搭建出来。但是搭建后<br>hexo s 运行的时候出现了一个问题卡了蛮久的。hexo s 能正常运行，就是用电脑浏览器一直访问不了，换了各种端口都没用，关闭防火墙也没用。各种百度后找到了问题所在:就是阿里云服务器的安全组规则没有开启4000端口</p><p><img src="/images/pasted-4.png" alt="upload successful"><br>根据要求把4000端口开启就行了<br>然后就能通过IP访问刚刚建好的博客了，哈哈</p><h2 id="搭建后主题方面的设置"><a href="#搭建后主题方面的设置" class="headerlink" title="搭建后主题方面的设置"></a>搭建后主题方面的设置</h2><p>我选择的是next主题，参照hexo中文文档就<br><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">next中文文档</a><br>想进行一些特殊的设置可以参照<br><a href="http://blog.csdn.net/qq_33699981/article/details/72716951" target="_blank" rel="noopener"> hexo的next主题个性化教程：打造炫酷网站</a><br>一切搞好后，炫酷的博客就出炉啦</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搭建的环境&quot;&gt;&lt;a href=&quot;#搭建的环境&quot; class=&quot;headerlink&quot; title=&quot;搭建的环境:&quot;&gt;&lt;/a&gt;搭建的环境:&lt;/h2&gt;&lt;p&gt;阿里云的Ubuntu16.04 服务器&lt;/p&gt;
&lt;h2 id=&quot;搭建的流程&quot;&gt;&lt;a href=&quot;#搭建的流程&quot; class=&quot;headerlink&quot; title=&quot;搭建的流程:&quot;&gt;&lt;/a&gt;搭建的流程:&lt;/h2&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.wangxuezhang.xin/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.wangxuezhang.xin/tags/hexo/"/>
    
  </entry>
  
</feed>
