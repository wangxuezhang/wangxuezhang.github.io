<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王学长</title>
  
  <subtitle>清醒的人最荒唐</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.wangxuezhang.xin/"/>
  <updated>2018-03-28T08:10:43.888Z</updated>
  <id>http://www.wangxuezhang.xin/</id>
  
  <author>
    <name>王学长</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu下搭建owncloud私有云平台</title>
    <link href="http://www.wangxuezhang.xin/2018/03/27/Ubuntu%E4%B8%8B%E6%90%AD%E5%BB%BAowncloud%E7%A7%81%E6%9C%89%E4%BA%91%E5%B9%B3%E5%8F%B0/"/>
    <id>http://www.wangxuezhang.xin/2018/03/27/Ubuntu下搭建owncloud私有云平台/</id>
    <published>2018-03-27T10:30:13.000Z</published>
    <updated>2018-03-28T08:10:43.888Z</updated>
    
    <content type="html"><![CDATA[<h3 id="owncloud"><a href="#owncloud" class="headerlink" title="owncloud"></a>owncloud</h3><p>ownCloud是一个自由且开源的个人云存储解决方案(类似百度网盘或者Dropbox)，包括两个部分：服务器和客户端。</p><p>ownCloud在客户端可通过网页界面，或者安装专用的客户端软件来使用。网页界面当然就是任何能打开网页的平台都支持，而客户端软件也支持相当多平台，Windows、Linux、iOS、Android皆有。</p><p>除了云存储之外，ownCloud也可用于同步行事历、电子邮件联系人、网页浏览器的书签；此外还有多人在线文件同步协作的功能。</p><h3 id="搭建的目的"><a href="#搭建的目的" class="headerlink" title="搭建的目的"></a>搭建的目的</h3><p>ftp服务器虽然能储存东西，但是不能在线预览。最近下载了一些教学视频，无奈自己笔记本硬盘太小，所以就想搭建一个能在线浏览pdf和视频的云平台。主要用于校园网里面。<br><a id="more"></a></p><h3 id="环境搭建过程"><a href="#环境搭建过程" class="headerlink" title="环境搭建过程"></a>环境搭建过程</h3><p>服务器：Ubuntu 16.04 IP:10.22.30.20<br>····························<br>第一步:安装apache2<br><code>apt install apache2 -y</code></p><p>安装完成后，浏览器访问服务器地址出现以下界面代表安装成功</p><p><img src="/images/pasted-57.png" alt="upload successful"><br>PS:注意防火墙开放80端口<br>····························<br>第二步:安装mysql<br><code>apt-get install mysql-server mysql-client -y</code><br>安装过程中会要求设置数据库密码<br>安装完成后 mysql -u root -p<br>出现以下界面代表安装mysql安装成功<br><img src="/images/pasted-58.png" alt="upload successful"><br>····························<br>第三步:安装phpmyadmin<br><code>apt-get install phpmyadmin</code><br>出现下图界面选apache2</p><p><img src="/images/pasted-59.png" alt="upload successful"><br>输入mysql的密码</p><p><img src="/images/pasted-60.png" alt="upload successful"><br>安装完成后在浏览器访问10.22.30.20/phpmyadmin,账号是root，密码是mysql的密码</p><p><img src="/images/pasted-62.png" alt="upload successful"><br>登录后创建数据库</p><p><img src="/images/pasted-63.png" alt="upload successful"><br>····························<br>第四步:安装PHP<br><code>apt-get install php -y</code></p><h3 id="owncloud服务端搭建"><a href="#owncloud服务端搭建" class="headerlink" title="owncloud服务端搭建"></a>owncloud服务端搭建</h3><p>解压下载好的owncloud-9.1.0.zip(可以去owncloud官网下载)<br><code>unzip owncloud-9.1.0.zip</code><br>将owncloud移动到/var/www/html 目录下<br><code>root@wlzx:/home/wlzx# mv owncloud /var/www/html/</code><br>建立数据文件夹，并赋予权限<br>cd /var/www/html/owncloud<br>root@wlzx:/var/www/html/owncloud# mkdir data<br>root@wlzx:/var/www/html/owncloud# chown -R www-data:www-data data<br>root@wlzx:/var/www/html/owncloud# chown -R www-data:www-data config<br>root@wlzx:/var/www/html/owncloud# chown -R www-data:www-data apps<br>····························<br>修改apache2的配置文件<br>vim /etc/apache2/apache2.conf<br><img src="/images/pasted-64.png" alt="upload successful"><br>重新启动模块</p><p> a2enmod rewrite<br> a2enmod headers</p><p>重新启动apache2</p><p>sudo service apache2 restart</p><p>····························<br>访问10.22.30.20/owncloud,发现少了两个模块<br><img src="/images/pasted-65.png" alt="upload successful"><br>安装curl模块<br><code>root@wlzx:/var/www/html/owncloud# apt-get install php-curl -y</code><br>安装zip模块<br><code>root@wlzx:/var/www/html/owncloud/zip-1.13.5# apt-get install php-zip</code><br>重启apache2服务<br><code>root@wlzx:/var/www/html/owncloud/zip-1.13.5# /etc/init.d/apache2 restart</code><br>再次访问10.22.30.20/owncloud，设置好管理员密码，数据库账号、密码、数据库名称</p><p><img src="/images/pasted-66.png" alt="upload successful"><br>至此这个云服务器就能正常访问啦</p><p><img src="/images/pasted-67.png" alt="upload successful"></p><h3 id="修改上传限制"><a href="#修改上传限制" class="headerlink" title="修改上传限制"></a>修改上传限制</h3><p>由于owncloud默认现在最大上传大小为513M，有些大文件上传不了，所以需要修改一下配置文件(owncloud目录下的.htaccess 文件)</p><p><img src="/images/pasted-68.png" alt="upload successful"><br>然后就能上传大文件了</p><p><img src="/images/pasted-69.png" alt="upload successful"><br>owncloud还可以挂载ftp站点，添加一些其它的插件！</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;owncloud&quot;&gt;&lt;a href=&quot;#owncloud&quot; class=&quot;headerlink&quot; title=&quot;owncloud&quot;&gt;&lt;/a&gt;owncloud&lt;/h3&gt;&lt;p&gt;ownCloud是一个自由且开源的个人云存储解决方案(类似百度网盘或者Dropbox)，包括两个部分：服务器和客户端。&lt;/p&gt;
&lt;p&gt;ownCloud在客户端可通过网页界面，或者安装专用的客户端软件来使用。网页界面当然就是任何能打开网页的平台都支持，而客户端软件也支持相当多平台，Windows、Linux、iOS、Android皆有。&lt;/p&gt;
&lt;p&gt;除了云存储之外，ownCloud也可用于同步行事历、电子邮件联系人、网页浏览器的书签；此外还有多人在线文件同步协作的功能。&lt;/p&gt;
&lt;h3 id=&quot;搭建的目的&quot;&gt;&lt;a href=&quot;#搭建的目的&quot; class=&quot;headerlink&quot; title=&quot;搭建的目的&quot;&gt;&lt;/a&gt;搭建的目的&lt;/h3&gt;&lt;p&gt;ftp服务器虽然能储存东西，但是不能在线预览。最近下载了一些教学视频，无奈自己笔记本硬盘太小，所以就想搭建一个能在线浏览pdf和视频的云平台。主要用于校园网里面。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>shell 编程 备忘录</title>
    <link href="http://www.wangxuezhang.xin/2018/03/23/shell-%E7%BC%96%E7%A8%8B-%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>http://www.wangxuezhang.xin/2018/03/23/shell-编程-备忘录/</id>
    <published>2018-03-23T12:09:16.000Z</published>
    <updated>2018-03-30T10:50:38.298Z</updated>
    
    <content type="html"><![CDATA[<p>复习一下shell编程 备忘</p><h3 id="if-条件判断语句"><a href="#if-条件判断语句" class="headerlink" title="if 条件判断语句"></a>if 条件判断语句</h3><h4 id="案例一-测试数字的大小"><a href="#案例一-测试数字的大小" class="headerlink" title="案例一 测试数字的大小"></a>案例一 测试数字的大小</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">NUM=100</span><br><span class="line">if (($NUM &gt; 4)); then</span><br><span class="line">echo &quot;thi num is $NUM greater 4!&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>[root@localhost shell]# bash 1.sh<br>this num is 100 greater 4!<br><a id="more"></a></p><h4 id="案例二-测试目录是否存在，不存在则新建"><a href="#案例二-测试目录是否存在，不存在则新建" class="headerlink" title="案例二 测试目录是否存在，不存在则新建"></a>案例二 测试目录是否存在，不存在则新建</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#！/bin/bash</span><br><span class="line">if [! -d /root/test/wang]; then</span><br><span class="line">mkdir -p /root/test/wang</span><br><span class="line">else </span><br><span class="line">echo &quot;This dir is exist!!!&quot;</span><br></pre></td></tr></table></figure><p>[root@localhost shell]# bash testfile.sh<br>This dir is exist!!!<br>PS：若该目录不存在则会新建目录</p><p>逻辑运算符解析：<br>-f 判断文件是否存在 eg: if [ -f filename ]<br>-d 判断目录是否存在 eg: if [ -d dir ]<br>-eq 等于 应用于：整型比较<br>-ne 不等于 应用于：整型比较<br>-lt 小于 应用于：整型比较<br>-gt 大于 应用于：整型比较<br>-le 小于或等于 应用于：整型比较<br>-ge 大于或等于 应用于：整型比较<br>-a 双方都成立（and） 逻辑表达式 –a 逻辑表达式<br>-o 单方成立（or） 逻辑表达式 –o 逻辑表达式<br>-z 空字符串</p><h4 id="案例三-多个条件测试判断"><a href="#案例三-多个条件测试判断" class="headerlink" title="案例三 多个条件测试判断"></a>案例三 多个条件测试判断</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">s=80;</span><br><span class="line">if [[ $s -gt 85 ]] ; then</span><br><span class="line">echo &quot;very good!&quot;;</span><br><span class="line">elif [[ $s -gt 75 ]] ; then</span><br><span class="line">echo &quot;good!&quot;;</span><br><span class="line">elif [[ $s -gt 60 ]] ; then </span><br><span class="line">echo &quot;pass!&quot;;</span><br><span class="line">else</span><br><span class="line">echo &quot;no pass!&quot;;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>[root@localhost shell]# bash many.sh<br>good</p><h3 id="for-循环语句"><a href="#for-循环语句" class="headerlink" title="for 循环语句"></a>for 循环语句</h3><h4 id="案例一-打印seq多个数"><a href="#案例一-打印seq多个数" class="headerlink" title="案例一 打印seq多个数"></a>案例一 打印seq多个数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">for i in `seq 5`</span><br><span class="line">do </span><br><span class="line">echo &quot;Num is $i&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>[root@localhost shell]# bash seq.sh<br>Num is 1<br>Num is 2<br>Num is 3<br>Num is 4<br>Num is 5</p><h4 id="案例二-找到相关-log，然后批量打包"><a href="#案例二-找到相关-log，然后批量打包" class="headerlink" title="案例二 找到相关 log，然后批量打包"></a>案例二 找到相关 log，然后批量打包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">for i  in `find /var/log -name &quot;*.log&quot;`</span><br><span class="line">do </span><br><span class="line">tar -czf 2018.tar $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>[root@localhost shell]# ls<br>1.sh  2018log.tar  log.sh  many.sh  seq.sh  testfile.sh  var</p><h3 id="while-循环语句"><a href="#while-循环语句" class="headerlink" title="while 循环语句"></a>while 循环语句</h3><h4 id="案例一-批量添加20个用户"><a href="#案例一-批量添加20个用户" class="headerlink" title="案例一 批量添加20个用户"></a>案例一 批量添加20个用户</h4><p>用户名称为userN，N为1-20的数字。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">U_NUM=1</span><br><span class="line">while [ $U_NUM -le 20 ]  #只要U_NUM小于或等于20，循环一直执行</span><br><span class="line">do</span><br><span class="line">useradd user$&#123;U_NUM&#125;</span><br><span class="line">U_NUM=$((U_NUM+1))</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><p>运行脚本:bash newuser.sh<br>lastlog验证结果</p><p><img src="/images/pasted-71.png" alt="upload successful"></p><h4 id="案例二-打印网卡配置文件的每一行"><a href="#案例二-打印网卡配置文件的每一行" class="headerlink" title="案例二 打印网卡配置文件的每一行"></a>案例二 打印网卡配置文件的每一行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">FILE=/etc/sysconfig/network-scripts/ifcfg-ens160</span><br><span class="line">while read -r line</span><br><span class="line">do</span><br><span class="line">echo $line</span><br><span class="line">done &lt; $FILE</span><br></pre></td></tr></table></figure><p>运行脚本:bash printnetwork.sh</p><p><img src="/images/pasted-72.png" alt="upload successful"></p><h3 id="until-语句"><a href="#until-语句" class="headerlink" title="until 语句"></a>until 语句</h3><p>批量删除用户，用户名称为userN,n(1&lt;=n&lt;=20)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">U_NUM=20</span><br><span class="line">until [ $U_NUM -eq 0 ]</span><br><span class="line">do</span><br><span class="line">userdel user$&#123;U_NUM&#125;</span><br><span class="line">U_NUM=$((U_NUM-1))</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><p>执行脚本，验证结果<br><img src="/images/pasted-73.png" alt="upload successful"></p><h3 id="备份Mysql数据库"><a href="#备份Mysql数据库" class="headerlink" title="备份Mysql数据库"></a>备份Mysql数据库</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;复习一下shell编程 备忘&lt;/p&gt;
&lt;h3 id=&quot;if-条件判断语句&quot;&gt;&lt;a href=&quot;#if-条件判断语句&quot; class=&quot;headerlink&quot; title=&quot;if 条件判断语句&quot;&gt;&lt;/a&gt;if 条件判断语句&lt;/h3&gt;&lt;h4 id=&quot;案例一-测试数字的大小&quot;&gt;&lt;a href=&quot;#案例一-测试数字的大小&quot; class=&quot;headerlink&quot; title=&quot;案例一 测试数字的大小&quot;&gt;&lt;/a&gt;案例一 测试数字的大小&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NUM=100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (($NUM &amp;gt; 4)); then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;thi num is $NUM greater 4!&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[root@localhost shell]# bash 1.sh&lt;br&gt;this num is 100 greater 4!&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mysql双机热备的实现</title>
    <link href="http://www.wangxuezhang.xin/2018/03/16/mysql%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://www.wangxuezhang.xin/2018/03/16/mysql双机热备的实现/</id>
    <published>2018-03-16T08:45:00.000Z</published>
    <updated>2018-03-17T14:59:10.774Z</updated>
    
    <content type="html"><![CDATA[<h3 id="双机热备概念"><a href="#双机热备概念" class="headerlink" title="双机热备概念"></a>双机热备概念</h3><p>日常百度百科<a href="https://baike.baidu.com/item/%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87%E7%B3%BB%E7%BB%9F/8666995" target="_blank" rel="noopener">双机热备百度百科</a><br>双机热备包括广义与狭义两种。<br>从广义上讲，就是对于重要的服务，使用两台服务器，互相备份，共同执行同一服务。当一台服务器出现故障时，可以由另一台服务器承担服务任务，从而在不需要人工干预的情况下，自动保证系统能持续提供服务。<br><a id="more"></a><br>从狭义上讲，双机热备特指基于active/standby方式的服务器热备。服务器数据包括数据库数据同时往两台或多台服务器写，或者使用一个共享的存储设备。在同一时间内只有一台服务器运行。当其中运行着的一台服务器出现故障无法启动时，另一台备份服务器会通过软件诊测（一般是通过心跳诊断）将standby机器激活，保证应用在短时间内完全恢复正常使用。<br>双机热备针对的是服务器的故障。服务器的故障可能由各种原因引起，如设备故障、操作系统故障、软件系统故障等等。一般地讲，在技术人员在现场的情况下，恢复服务器正常可能需要10分钟、几小时甚至几天。从实际经验上看，除非是简单地重启服务器（可能隐患仍然存在），否则往往需要几个小时以上。而如果技术人员不在现场，则恢复服务的时间就更长了。<br>而对于一些重要系统而言，用户是很难忍受这样长时间的服务中断的。因此，就需要通过双机热备，来避免长时间的服务中断，保证系统长期、可靠的服务。<br>决定是否使用双机热备，正确的方法是要分析一下系统的重要性以及对服务中断的容忍程度，以此决定是否使用双机热备。即，你的用户能容忍多长时间恢复服务，如果服务不能恢复会造成多大的影响。</p><h3 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h3><h4 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h4><p>主服务器A：10.22.30.6(centos 7)<br>从服务器B：10.22.30.7(centos 7)<br>mysql:5.6.39(两台服务器都是一样的)<br>这里配置的是主从服务器,其中同步的都是创建的test数据库<br>mysql用户名test，密码123456</p><h4 id="主服务器A上的配置"><a href="#主服务器A上的配置" class="headerlink" title="主服务器A上的配置"></a>主服务器A上的配置</h4><p>1:先创建一个允许从服务器B连接数据库的用户test,密码123456<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant replication slave on *.* to &apos;test&apos;@&apos;10.22.30.7&apos;  identified by &apos;123456&apos;;</span><br><span class="line">flush privileges; //刷新权限</span><br></pre></td></tr></table></figure></p><p>创建好后在从服务器B上连接测试一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 10.22.30.6 -u root -p 123456</span><br></pre></td></tr></table></figure></p><p>这样表示能连接成功<br><img src="/images/pasted-44.png" alt="upload successful"><br>PS:如果连接不进去可以检查一下A服务器上防火墙是否允许3306端口通过。<br>2:在修改主服务器上A的/etc/my.cnf<br><figure class="highlight plain"><figcaption><span>~]# vim</span><a href="/etc/my.cnf```">link</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![upload successful](/images/pasted-45.png)</span><br><span class="line">3:重启mysql服务,进入mysql查看状态</span><br><span class="line">```[root@localhost ~]# service mysqld restart ##重启mysql服务</span><br></pre></td></tr></table></figure></p><p>查看master状态<br><img src="/images/pasted-46.png" alt="upload successful"><br>其中File和Position参数是配置从服务器需要的。<br>4:把数据库的锁打开<br><code>mysql&gt; unlock tables;</code></p><h4 id="从服务器B上的配置"><a href="#从服务器B上的配置" class="headerlink" title="从服务器B上的配置"></a>从服务器B上的配置</h4><p>1:修改从服务器B上mysql的配置文件<br><figure class="highlight plain"><figcaption><span>~]# vim</span><a href="/etc/my.cnf```">link</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![upload successful](/images/pasted-47.png)</span><br><span class="line">2:重启mysql服务</span><br><span class="line">```[root@root ~]# service mysqld restart</span><br></pre></td></tr></table></figure></p><p>3:指定同步位置<br><figure class="highlight plain"><figcaption><span>slave; #先关闭同步服务```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![upload successful](/images/pasted-48.png)</span><br><span class="line">```mysql&gt;start slave;#开启同步服务</span><br></pre></td></tr></table></figure></p><p>4:查看从服务器状态</p><p><img src="/images/pasted-49.png" alt="upload successful"><br>Slave_IO_Running: Yes<br>Slave_SQL_Running: Yes<br>代表同步设置成功。<br>5:测试同步<br>主服务器上在test数据库中创建两个表</p><p><img src="/images/pasted-50.png" alt="upload successful"><br>从服务器上同步如下</p><p><img src="/images/pasted-51.png" alt="upload successful"><br>到此mysql主从热备就配置完毕了！</p><h3 id="主主复制"><a href="#主主复制" class="headerlink" title="主主复制"></a>主主复制</h3><p>主从复制是从服务器同步主服务器，那么主主复制就是两台主机互为主从。下面开始配置</p><h4 id="环境搭建-1"><a href="#环境搭建-1" class="headerlink" title="环境搭建"></a>环境搭建</h4><p>环境还是接着用主从复制时候的环境，不过开始前要先把mysql的同步停止。</p><h4 id="主服务器B上的配置"><a href="#主服务器B上的配置" class="headerlink" title="主服务器B上的配置"></a>主服务器B上的配置</h4><p>1:先创建一个允许服务器A远程登录的用户<br><figure class="highlight plain"><figcaption><span>grant replication slave on *.* to 'test'@'10.22.30.6' identified by '123456'</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;flush privileges;</span><br></pre></td></tr></table></figure></p><p>2:查看二进制名和位置</p><p><img src="/images/pasted-52.png" alt="upload successful"><br>然后在主服务器A上填好相应的信息</p><h4 id="主服务器A上的配置-1"><a href="#主服务器A上的配置-1" class="headerlink" title="主服务器A上的配置"></a>主服务器A上的配置</h4><p>1:进入数据库，配置一下信息<br><img src="/images/pasted-53.png" alt="upload successful"><br>2:开启复制(B服务器上也要开)  <code>mysql&gt; start slave;</code><br>3:查看是否配置成功</p><p><img src="/images/pasted-54.png" alt="upload successful"><br>Slave_IO_Running:Yes<br>Slave_SQL_Runing:Yes<br>代表配置成功</p><h4 id="测试同步"><a href="#测试同步" class="headerlink" title="测试同步"></a>测试同步</h4><p>B服务器上创建stu表并插入数据<br><img src="/images/pasted-55.png" alt="upload successful"><br>查看A服务器上同步状态<br><img src="/images/pasted-56.png" alt="upload successful"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>看了很多博客，还是觉得这篇博客写的清楚，膜拜大佬<a href="http://www.cnblogs.com/phpstudy2015-6/p/6485819.html#_label7" target="_blank" rel="noopener">那一叶随风</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;双机热备概念&quot;&gt;&lt;a href=&quot;#双机热备概念&quot; class=&quot;headerlink&quot; title=&quot;双机热备概念&quot;&gt;&lt;/a&gt;双机热备概念&lt;/h3&gt;&lt;p&gt;日常百度百科&lt;a href=&quot;https://baike.baidu.com/item/%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87%E7%B3%BB%E7%BB%9F/8666995&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;双机热备百度百科&lt;/a&gt;&lt;br&gt;双机热备包括广义与狭义两种。&lt;br&gt;从广义上讲，就是对于重要的服务，使用两台服务器，互相备份，共同执行同一服务。当一台服务器出现故障时，可以由另一台服务器承担服务任务，从而在不需要人工干预的情况下，自动保证系统能持续提供服务。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://www.wangxuezhang.xin/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://www.wangxuezhang.xin/tags/mysql/"/>
    
      <category term="linux" scheme="http://www.wangxuezhang.xin/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>centos 7.2 安装mysql5.7</title>
    <link href="http://www.wangxuezhang.xin/2018/03/13/centos-7-2-%E5%AE%89%E8%A3%85mysql5-7/"/>
    <id>http://www.wangxuezhang.xin/2018/03/13/centos-7-2-安装mysql5-7/</id>
    <published>2018-03-13T09:24:00.000Z</published>
    <updated>2018-03-15T03:28:25.650Z</updated>
    
    <content type="html"><![CDATA[<p>1:<code>wget http://repo.mysql.com/mysql57-community-release-el7-10.noarch.rpm</code><br>2:<code>rpm -Uvh mysql57-community-release-el7-10.noarch.rpm</code><br>3:<code>yum install -y mysql-community-server</code><br>4:<code>service mysqld start</code><br>5:修改临时密码，mysql5.7安装后会有个随机的密码。<br>查看临时密码<code>grep &#39;temporary password&#39; /var/log/mysqld.log</code> 这里我的密码是<br><img src="/images/pasted-40.png" alt="upload successful"><br>6:利用临时密码登录并且修改密码</p><p><img src="/images/pasted-41.png" alt="upload successful"><br>因为是为了做测试，所以这里密码设置简单一点，但是由于设置简单会报错，所以修改一下规则。<br><code>set global validate_password_policy=0;</code><br><code>set global validate_password_length=1;</code><br>然后尝试修改密码:<br><code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;qweasd&#39;;</code><br>设置好后就可以用设置好的密码登录了！<br>出处：<a href="http://blog.csdn.net/zyw_java/article/details/70949596" target="_blank" rel="noopener">Centos7.3 安装Mysql5.7并修改初始密码</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1:&lt;code&gt;wget http://repo.mysql.com/mysql57-community-release-el7-10.noarch.rpm&lt;/code&gt;&lt;br&gt;2:&lt;code&gt;rpm -Uvh mysql57-community-release-el7-1
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://www.wangxuezhang.xin/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>记录一次网络克隆的经验</title>
    <link href="http://www.wangxuezhang.xin/2018/03/08/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E7%BD%91%E7%BB%9C%E5%85%8B%E9%9A%86%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    <id>http://www.wangxuezhang.xin/2018/03/08/记录一次网络克隆的经验/</id>
    <published>2018-03-08T07:19:00.000Z</published>
    <updated>2018-03-11T08:43:14.721Z</updated>
    
    <content type="html"><![CDATA[<h5 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h5><p>  学生上课的大机房，其中学生机114台，教师机一台。要求学生机上安装上课必备的一些软件，教师机能够控制所有学生机，并且学生机要做还原。显然是不可能一台一台手动去装的，这时就需要用到网络克隆了。<br>  <a id="more"></a></p><h5 id="网络克隆"><a href="#网络克隆" class="headerlink" title="网络克隆"></a>网络克隆</h5><p>下面科普一下网络克隆（都是百度百科上的）<br>网络克隆是一种短时间内在大批量电脑上安装操作系统的一种先进的方法，目前实现的方法主要有两种，一种是在客户机上面使用存放引导文件,这种方法灵活性不太好，另一种方法是使用支持PXE的网卡来从服务器上面下载引导文件，然后装入到客户机中<br>特点：这种快速,大批量安装操作系统的方法越来越受到欢迎,因为,它脱离了以前那种逐台拆开机箱然后安装上光驱或者是用硬盘对拷的麻烦,并且以前的方式稍不注意就有可能因为插拨不当造成设备的损坏<br>具体操作：网络方式所需要做的工作就是准备一台网络服务器,在一台电脑(客户机)上安装系统,然后把这台客户机的系统做成母盘,上传到服务器当中,其他的客户机硬盘分区,系统的安装就很简单了,只需要将客户机从网络引导,即可连接到服务器,轻松的进行系统的安装,其中网络引导指的是从网卡启动,这个需要网卡的支持,如果网卡不支持网络启动的话,那就只能从其他介质进行引导了,可以把引导程序放入到光盘,软盘,移动硬盘,U盘,存储卡等等设备当中,同样可以实现网克的目的。</p><h5 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h5><p>(1):首先需要做一个做好的母机，母机上装好机房上课需要的软件。然后准备好maxdos软件<br>(2):开始制作母机的镜像。打开教师机上的maxdos软件</p><p><img src="/images/pasted-28.png" alt="upload successful"><br>PS：镜像文件路径需要自己选择合适的存放路径</p><p><img src="/images/pasted-29.png" alt="upload successful"><br>保存好后点击网络设置</p><p><img src="/images/pasted-32.png" alt="upload successful"></p><p>启动网卡会默认选择电脑网卡上的IP，所以根据自己喜好随意改，但是要保证启动网卡和起始IP在同一网段下！<br>启动方案后是这样的</p><p><img src="/images/pasted-33.png" alt="upload successful"><br>只要客户端开机选择网卡启动后连接上来以后点击发送就可以了，然后静静等待母盘制作完成<br>(3):开始批量网络克隆(在开始之前，建议把机房的网络断掉，交换机上的DHCP什么的也都关掉，不然克隆的时候可能出现客服端一直在DHCP界面，找不到服务端分配的地址，容易冲突)<br>设置方案</p><p><img src="/images/pasted-34.png" alt="upload successful"></p><p><img src="/images/pasted-35.png" alt="upload successful"><br>网络设置还是一样的，重点也是服务端(也就是这里的教师机)和客服端(学生机)在同一网段。</p><p><img src="/images/pasted-37.png" alt="upload successful"></p><p><img src="/images/pasted-36.png" alt="upload successful"><br>一切设置好之后，启动方案，把机房的电脑设置为网卡启动(不同机器设置方法不同，所以设置方法请自行百度)。机房电脑设置为网卡启动后，开机时会服务端会分配一个地址过去，并且会自动下载引导文件。当教师机上显示机器数目到了需要克隆的机器数目时就可以开始了。<br>…..做的时候只拍下了这两张图片</p><p><img src="/images/pasted-38.png" alt="upload successful"></p><p><img src="/images/pasted-39.png" alt="upload successful"><br>静静等进度条到达百分百就ok了。中间有些部分没有图片，下次做的时候在补上！</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;场景&quot;&gt;&lt;a href=&quot;#场景&quot; class=&quot;headerlink&quot; title=&quot;场景&quot;&gt;&lt;/a&gt;场景&lt;/h5&gt;&lt;p&gt;  学生上课的大机房，其中学生机114台，教师机一台。要求学生机上安装上课必备的一些软件，教师机能够控制所有学生机，并且学生机要做还原。显然是不可能一台一台手动去装的，这时就需要用到网络克隆了。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>校园网拓扑图</title>
    <link href="http://www.wangxuezhang.xin/2018/01/11/%E6%A0%A1%E5%9B%AD%E7%BD%91%E6%8B%93%E6%89%91%E5%9B%BE/"/>
    <id>http://www.wangxuezhang.xin/2018/01/11/校园网拓扑图/</id>
    <published>2018-01-11T05:44:30.000Z</published>
    <updated>2018-01-13T07:01:23.296Z</updated>
    
    <content type="html"><![CDATA[<p>拓扑图如下:</p><p><img src="/images/pasted-19.png" alt="upload successful"><br>题目要求如下：<br>1.按照图中所示配置校园网内的vlan<br>2.教学楼交换机配置pvst生成树<br>  对于vlan100，阻塞教学楼交换机1的6号端口和教学楼交换机3的5号端口<br>  对于vlan200，阻塞教学楼交换机2的6号端口和教学楼交换机3的7号端口<br>3.校园网内主机通过DHCP获得IP地址<br>4.校园网内互通，通过WiFi连接的校内主机可以通过域名访问www.hhtc.edu.cn<br>5.校内主机不能访问财务处的主机，但是财务处主机2除外<br>6.校园网设备上配置管理VLAN99，可以通过vty登录任何设备<br>7.Router0 和 Router1之间配置帧中继点到点网络<br>8.Router0 和 Router2之间配置ppp chap认证，密码hhtc<br>9.在需要的网络设备上配置动态路由协议<br>10.Router0上配置NAT,实现校园网内主机能够通过NAT转换后访问www.taobao.com<br>pc7能够访问www.hhtc.edu.cn<br><a id="more"></a> </p><h4 id="设置VLAN"><a href="#设置VLAN" class="headerlink" title="设置VLAN"></a>设置VLAN</h4><p>先在三层交换机上设置所有的VLAN<br>配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Switch#configure terminal </span><br><span class="line">Switch(config)#vlan 11</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#vlan 22</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#vlan 100</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#vlan 200</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#vlan 300</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#interface vlan 11</span><br><span class="line">Switch(config-if)#ip address 10.1.11.254 255.255.255.0 //设置vlan11的网关</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#interface vlan 22</span><br><span class="line">Switch(config-if)#ip address 10.1.22.254 255.255.255.0</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#interface vlan 100</span><br><span class="line">Switch(config-if)#ip address 10.2.0.254 255.255.128.0</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#interface vlan 200</span><br><span class="line">Switch(config-if)#ip address 10.2.128.254 255.255.128.0</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#interface vlan 300</span><br><span class="line">Switch(config-if)#ip address 10.3.0.254 255.255.0.0</span><br><span class="line">Switch(config)ip routing //记得开启这个功能，要不然不同VLAN间不能通信......</span><br></pre></td></tr></table></figure></p><h4 id="设置DHCP"><a href="#设置DHCP" class="headerlink" title="设置DHCP"></a>设置DHCP</h4><p>这是在三层交换机上设置DHCP，在路由器上或者服务器上设置DHCP也是可以的<br>配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">设置VLAN11</span><br><span class="line">Switch(config)#ip dhcp pool vlan11 //设置相应的VLAN</span><br><span class="line">Switch(dhcp-config)#default-router 10.1.11.254 //设置VLAN对应的网关</span><br><span class="line">Switch(dhcp-config)#network 10.1.11.0 255.255.255.0 //设置分配的地址池</span><br><span class="line">Switch(dhcp-config)#dns-server 10.1.1.2 //设置默认的DNS地址</span><br><span class="line">Switch(dhcp-config)#exit</span><br><span class="line">设置VLAN22</span><br><span class="line">Switch(config)#ip dhcp pool vlan22</span><br><span class="line">Switch(dhcp-config)#default-router 10.1.22.254</span><br><span class="line">Switch(dhcp-config)#network 10.1.22.0 255.255.255.0</span><br><span class="line">Switch(dhcp-config)#dns-server 10.1.1.2</span><br><span class="line">设置VLAN100</span><br><span class="line">Switch(dhcp-config)#exit</span><br><span class="line">Switch(config)#ip dhcp pool vlan100</span><br><span class="line">Switch(dhcp-config)#default-router 10.2.0.254</span><br><span class="line">Switch(dhcp-config)#network 10.2.0.0 255.255.128.0</span><br><span class="line">Switch(dhcp-config)#dns-server 10.1.1.2</span><br><span class="line">设置VLAN200</span><br><span class="line">Switch(dhcp-config)#exit</span><br><span class="line">Switch(config)#ip dhcp pool vlan200</span><br><span class="line">Switch(dhcp-config)#default-router 10.2.128.254</span><br><span class="line">Switch(dhcp-config)#network 10.2.128.0 255.255.128.0</span><br><span class="line">Switch(dhcp-config)#dns-server 10.1.1.2</span><br><span class="line">设置VLAN300</span><br><span class="line">Switch(config)#ip dhcp pool vlan300</span><br><span class="line">Switch(dhcp-config)#default-router 10.3.0.254</span><br><span class="line">Switch(dhcp-config)#network 10.3.0.0 255.255.0.0</span><br><span class="line">Switch(dhcp-config)#dns-server 10.1.1.2</span><br><span class="line">Switch(config)#service dhcp</span><br></pre></td></tr></table></figure></p><p>设置trunk<br>把与交换机相连的接口全部设置为TRUNK模式<br>TRUNK是端口汇聚的意思，允许交换机与交换机、交换机与路由器、主机与交换机或路由器之间通过两个或多个端口并行连接同时传输以提供更高带宽、更大吞吐量， 大幅度提供整个网络能力。VLAN TRUNK一般是你设置了多个VLAN后，想通过一个端口传输多个VLAN，这个后需要把该端口设置为TRUNK了。<br>trunk 设置好后，pc机就能分配到相应的IP地址了<br>如图所示：</p><p><img src="/images/pasted-20.png" alt="upload successful"><br>并且不同VLAN间能直接通信</p><p><img src="/images/pasted-21.png" alt="upload successful"></p><h4 id="开启三层交换机的路由功能"><a href="#开启三层交换机的路由功能" class="headerlink" title="开启三层交换机的路由功能"></a>开启三层交换机的路由功能</h4><p>三层交换机与路由器相连的端口是24号端口，所以需要把三层交换机的端口改为路由端口，配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)#interface fastEthernet 0/24</span><br><span class="line">Switch(config-if)#no switchport //改为路由接口</span><br><span class="line">Switch(config-if)#ip address 10.4.4.4 255.255.255.0 //设置接口的地址</span><br><span class="line">Switch(config)#exit</span><br><span class="line">Switch(config)#ip route 0.0.0.0 0.0.0.0 fastEthernet 0/24 //配置默认路由</span><br><span class="line">Switch(config)#route eigrp 1</span><br><span class="line">Switch(config-router)#network 10.0.0.0</span><br><span class="line">Switch(config-router)#no auto-summary</span><br></pre></td></tr></table></figure></p><p>这样在宿舍楼区域就能ping 10.4.4.4了。</p><p><img src="/images/pasted-22.png" alt="upload successful"></p><h4 id="Router0上的设置"><a href="#Router0上的设置" class="headerlink" title="Router0上的设置"></a>Router0上的设置</h4><p>先设置网络中心的网关<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Router#configure terminal </span><br><span class="line">Router(config)#interface fastEthernet 0/0</span><br><span class="line">Router(config-if)#no shutdown //开启该端口</span><br><span class="line">Router(config-if)#ip address 10.1.1.254 255.255.255.0</span><br></pre></td></tr></table></figure></p><p>然后让校园网与网络中心互通<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#interface fastEthernet 0/1</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#ip address 10.4.4.5 255.255.255.0 //设置端口1的地址</span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#ip route 0.0.0.0 0.0.0.0 fastEthernet 0/0</span><br><span class="line">Router(config)#ip route 0.0.0.0 0.0.0.0 fastEthernet 0/1</span><br><span class="line">Router(config)#ip route 0.0.0.0 0.0.0.0 serial 0/0/0</span><br><span class="line">Router(config)#ip route 0.0.0.0 0.0.0.0 serial 0/0/1</span><br><span class="line">PS：为了方便，把所有接口的默认路由都设置了</span><br><span class="line">Router(config)#route eigrp 1 //选择eigrp协议</span><br><span class="line">Router(config-router)#network 10.0.0.0</span><br><span class="line">Router(config-router)#no auto-summary</span><br></pre></td></tr></table></figure></p><p>测试结果如下：</p><p><img src="/images/pasted-23.png" alt="upload successful"><br>宿舍楼的电脑能成功的访问www.hhtc.edu.cn<br>至此，内网全部互通。</p><h4 id="帧中继"><a href="#帧中继" class="headerlink" title="帧中继"></a>帧中继</h4><p>Router0 和 Router1之间配置帧中继点到点网络<br>帧中继（Frame Relay, FR）是面向连接的第二层传输协议，帧中继是典型的包交换技术。相比而言，同样带宽的帧中继通信费用比 DDN 专线要低，而且允许用户在帧中继交换网<br>络比较空闲的时候以高于 ISP 所承诺的速率进行传输。<br>下面进行配置，先配置帧中继云</p><p><img src="/images/pasted-24.png" alt="upload successful"></p><p><img src="/images/pasted-25.png" alt="upload successful"><br>LMI选择cisco，DLCI值可以任意填写。<br>Route0上的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#interface serial 0/0/0</span><br><span class="line">Router(config-if)#no shutdown</span><br><span class="line">Router(config-if)#encapsulation frame-relay //封装帧中继 </span><br><span class="line">Router(config-if)#frame-relay lmi-type cisco //帧中继类型为cisco</span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#interface serial 0/0/0.1 point-to-point //配置子接口为点对点模式</span><br><span class="line">Router(config-subif)#ip address 192.168.1.1 255.255.255.0</span><br><span class="line">Router(config-subif)#frame-relay interface-dlci 103 //dlci值填写刚刚设置好的dlci值</span><br><span class="line">启动eigrp路由，添加新的路由</span><br><span class="line">Router(config)#router eigrp 1</span><br><span class="line">Router(config-router)#network 192.168.1.0</span><br></pre></td></tr></table></figure></p><p>Router1上的配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#interface serial 0/0/0</span><br><span class="line">Router(config-if)#no shutdown</span><br><span class="line">Router(config-if)#encapsulation frame-relay //封装帧中继 </span><br><span class="line">Router(config-if)#frame-relay lmi-type cisco //帧中继类型为cisco</span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#interface serial 0/0/0.1 point-to-point //配置子接口为点对点模式</span><br><span class="line">Router(config-subif)#ip address 192.168.1.2 255.255.255.0</span><br><span class="line">Router(config-subif)#frame-relay interface-dlci 301 //dlci值填写刚刚设置好的dlci值</span><br><span class="line">启动eigrp路由，添加新的路由</span><br><span class="line">Router(config)#router eigrp 1</span><br><span class="line">Router(config-router)#network 192.168.1.0</span><br><span class="line">顺便把taobao服务器的网关设置好吧</span><br><span class="line">Router(config)#interface fastEthernet 0/0</span><br><span class="line">Router(config-if)#ip address 172.16.1.254 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown</span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#router eigrp 1</span><br><span class="line">Router(config-router)#network 172.16.0.0</span><br></pre></td></tr></table></figure></p><p>这样帧中继就配置好了，两个路由器就能互相ping通了</p><p><img src="/images/pasted-26.png" alt="upload successful"><br>并且用show ip route 可以看到路由表</p><p><img src="/images/pasted-27.png" alt="upload successful"></p><h4 id="配置ACL"><a href="#配置ACL" class="headerlink" title="配置ACL"></a>配置ACL</h4><p>整个网络都能互相通信了，接下来就配置ACL了。<br>访问控制列表简称为 ACL，它使用包过滤技术，在路由器上读取第三层及第四层包头中的信息如源地址、目的地址、源端口、目的端口等，根据预先定义好的规则对包进行过滤，从而达到访问控制的目的。ACL 分很多种，不同场合应用不同种类的 ACL。<br>这个场景中是要求:<br>校内主机不能访问财务处的主机，但是财务处主机2除外</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;拓扑图如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-19.png&quot; alt=&quot;upload successful&quot;&gt;&lt;br&gt;题目要求如下：&lt;br&gt;1.按照图中所示配置校园网内的vlan&lt;br&gt;2.教学楼交换机配置pvst生成树&lt;br&gt;  对于vlan100，阻塞教学楼交换机1的6号端口和教学楼交换机3的5号端口&lt;br&gt;  对于vlan200，阻塞教学楼交换机2的6号端口和教学楼交换机3的7号端口&lt;br&gt;3.校园网内主机通过DHCP获得IP地址&lt;br&gt;4.校园网内互通，通过WiFi连接的校内主机可以通过域名访问www.hhtc.edu.cn&lt;br&gt;5.校内主机不能访问财务处的主机，但是财务处主机2除外&lt;br&gt;6.校园网设备上配置管理VLAN99，可以通过vty登录任何设备&lt;br&gt;7.Router0 和 Router1之间配置帧中继点到点网络&lt;br&gt;8.Router0 和 Router2之间配置ppp chap认证，密码hhtc&lt;br&gt;9.在需要的网络设备上配置动态路由协议&lt;br&gt;10.Router0上配置NAT,实现校园网内主机能够通过NAT转换后访问www.taobao.com&lt;br&gt;pc7能够访问www.hhtc.edu.cn&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>思科CCNA大综合实验</title>
    <link href="http://www.wangxuezhang.xin/2018/01/08/%E6%80%9D%E7%A7%91CCN%E5%A4%A7%E7%BB%BC%E5%90%88%E5%AE%9E%E9%AA%8C/"/>
    <id>http://www.wangxuezhang.xin/2018/01/08/思科CCN大综合实验/</id>
    <published>2018-01-08T06:24:00.000Z</published>
    <updated>2018-01-09T11:43:58.861Z</updated>
    
    <content type="html"><![CDATA[<p>拓扑图如下：</p><p><img src="/images/pasted-17.png" alt="upload successful"><br>思科模拟器上的是这样的</p><p><img src="/images/pasted-18.png" alt="upload successful"><br>题目要求太多了，一点一点做起吧<br><a id="more"></a></p><h6 id="Etherchannel"><a href="#Etherchannel" class="headerlink" title="Etherchannel"></a>Etherchannel</h6><p>之前没怎么见过这东西，不怎么熟悉，所以还说上百度百科<br><a href="https://baike.baidu.com/item/EtherChannel/5802896?fr=aladdin" target="_blank" rel="noopener">Etherchannel</a><br>题目要求是：<br>做Etherchannel 捆绑Sw1 与Sw2 的<br>F0/11,F0/12 接口. 要求使用Cisco PAGP 协议中的主动协<br>商模式<br>Sw1的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Sw1(config)#interface range fastEthernet 0/11-12</span><br><span class="line">Sw1(config-if-range)#switchport mode trunk </span><br><span class="line">Sw1(config-if-range)#channel-group 1 mode desirable</span><br></pre></td></tr></table></figure></p><p>Sw2的配置跟Sw1的一样</p><h6 id="管理vlan访问控制"><a href="#管理vlan访问控制" class="headerlink" title="管理vlan访问控制"></a>管理vlan访问控制</h6><p>题目要求：<br>在Sw1 上设置管理vlan 10, 地址为192.168.1.10/24; 管理vlan 20, 地址为192.168.2.10/24.做ACL 访问控制, 要求只有PC1/PC2 可以远程访问Sw1.<br>这需要ACL，也就是访问控制列表，这里用到的是标准ACL<br>配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Sw1(config)#interface vlan 10</span><br><span class="line">Sw1(config-if)#ip address 192.168.1.10 255.255.255.0 //设置vlan10的管理地址</span><br><span class="line">Sw1(config-if)#exit</span><br><span class="line">Sw1(config)#interface vlan 20</span><br><span class="line">Sw1(config-if)#</span><br><span class="line">Sw1(config-if)#ip address 192.168.2.10 255.255.255.0 //设置vlan20的管理地址</span><br><span class="line">Sw1(config-if)#exit</span><br><span class="line">Sw1(config)#access-list 1 permit host 192.168.1.1 //设置ACL</span><br><span class="line">Sw1(config)#access-list 1 permit host 192.168.2.1 //设置ACL</span><br><span class="line">Sw1(config)#line vty 0 15</span><br><span class="line">Sw1(config-line)#access-class 1 in</span><br></pre></td></tr></table></figure></p><h6 id="单臂路由"><a href="#单臂路由" class="headerlink" title="单臂路由"></a>单臂路由</h6><p>用R1上的F1/0.10作为VLAN10的出口网关<br>用R3上的F2/0.20作为VLAN20的出口网关</p><p>先上百度百科充实一下自己的知识：<br>单臂路由（router-on-a-stick）是指在路由器的一个接口上通过配置子接口（或“逻辑接口”，并不存在真正物理接口）的方式，实现原来相互隔离的不同VLAN（虚拟局域网）之间的互联互通。<br>优缺点：<br>VLAN能有效分割局域网，实现各网络区域之间的访问控制。但现实中，往往需要配置某些VLAN之间的互联互通。比如，你的公司划分为领导层、销售部、财务部、人力部、科技部、审计部，并为不同部门配置了不同的VLAN，部门之间不能相互访问，有效保证了各部门的信息安全。但经常出现领导层需要跨越VLAN访问其他各个部门，这个功能就由单臂路由来实现。<br>优点：实现不同vlan之间的通信，有助理解、学习VLAN原理和子接口概念。<br>缺点：容易成为网络单点故障，配置稍有复杂，现实意义不大。</p><p>下面开始配置单臂路由：<br>交换机SW1和SW2上已经在接口1和2上分别设置好了vlan10和vlan20<br>只要配置路由器上的就好了<br>R1上的配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">R1#configure terminal</span><br><span class="line">R1(config)#interface f1/0</span><br><span class="line">R1(config-if)#no shutdown //开启端口</span><br><span class="line">R1(config-if)#exit</span><br><span class="line">R1(config)#interface f1/0.10 //进入子接口</span><br><span class="line">R1(config-subif)#encpuslation dotlQ 10 //为子接口封装802.1Q 协议，10是VLAN号</span><br><span class="line">R1(config-subif)#ip address 192.168.1.254 255.255.255.0 //划分网关和子网掩码</span><br></pre></td></tr></table></figure></p><p>R3上的配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">R3#configure terminal</span><br><span class="line">R3(config)#interface f1/0</span><br><span class="line">R3(config-if)#no shutdown //开启端口</span><br><span class="line">R3(config-if)#exit</span><br><span class="line">R3(config)#interface f1/0.20 //进入子接口</span><br><span class="line">R3(config-subif)#encpuslation dotlQ 20 //为子接口封装802.1Q 协议，20是VLAN号</span><br><span class="line">R1(config-subif)#ip address 192.168.2.254 255.255.255.0 //划分网关和子网掩码</span><br></pre></td></tr></table></figure></p><h6 id="RIPv2"><a href="#RIPv2" class="headerlink" title="RIPv2"></a>RIPv2</h6><h6 id="等价负载均衡"><a href="#等价负载均衡" class="headerlink" title="等价负载均衡"></a>等价负载均衡</h6><p>等价负载均衡(Equal-Cost Load Sharing)：是将流量均等地分布到多条度量相同的路径上，RIP的Metric是跳数</p><h6 id="OSPF"><a href="#OSPF" class="headerlink" title="OSPF"></a>OSPF</h6><p>题目要求：<br>在R1/R2/R3/R4 上配置单区域(area 0)OSPF, 使得<br>全网互通（R4与运营商R5的S0/0不宣告）<br>OSPF:<br>OSPF(Open Shortest Path First开放式最短路径优先）是一个内部网关协议(Interior Gateway Protocol，简称IGP），用于在单一自治系统（autonomous system，AS）内决策路由。是对链路状态路由协议的一种实现，隶属内部网关协议（IGP），故运作于自治系统内部。著名的迪克斯加算法(Dijkstra)被用来计算最短路径树。OSPF分为OSPFv2和OSPFv3两个版本,其中OSPFv2用在IPv4网络，OSPFv3用在IPv6网络。OSPFv2是由RFC 2328定义的，OSPFv3是由RFC 5340定义的。与RIP相比，OSPF是链路状态协议，而RIP是距离矢量协议。 不同厂商管理距离不同，思科OSPF的协议管理距离（AD）是110，华为OSPF的协议管理距离是10。更详细的解释可以直接上互动百科(OSPF):[<a href="http://www.baike.com/wiki/OSPF%E5%8D%8F%E8%AE%AE" target="_blank" rel="noopener">http://www.baike.com/wiki/OSPF%E5%8D%8F%E8%AE%AE</a>]<br>然后是路由器的配置<br>R1的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">R1#configure t</span><br><span class="line">R1(config)#router ospf 1</span><br><span class="line">R1(config-router)#netw</span><br><span class="line">R1(config-router)#network 10.0.0.0 0.255.255.255 area 0</span><br><span class="line">R1(config-router)#network 172.16.0.0 0.255.255.255 area 0</span><br><span class="line">R1(config-router)#network 192.168.1.0 0.255.255.255 area 0</span><br></pre></td></tr></table></figure></p><p>R2的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R2#configure terminal </span><br><span class="line">R2(config)#router ospf 1</span><br><span class="line">R2(config-router)#network 10.0.0.0 0.255.255.255 ar</span><br><span class="line">R2(config-router)#network 10.0.0.0 0.255.255.255 area 0</span><br></pre></td></tr></table></figure></p><p>R3的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">R3#configure terminal </span><br><span class="line">R3(config)#router ospf 1</span><br><span class="line">R3(config-router)#network 10.0.0.0 0.255.255.255 area 0</span><br><span class="line">R3(config-router)#network 172.16.0.0 0.255.255.255 area 0</span><br><span class="line">R3(config-router)#network 192.168.2.0 0.255.255.255 area 0</span><br></pre></td></tr></table></figure></p><p>R4的配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">R4#configure terminal </span><br><span class="line">R4(config)#router ospf 1</span><br><span class="line">R4(config-router)#network 172.16.0.0 0.255.255.255 area 0</span><br></pre></td></tr></table></figure></p><h6 id="EIGRP"><a href="#EIGRP" class="headerlink" title="EIGRP"></a>EIGRP</h6><p>题目要求:<br>在R1/R2/R3/R4 上配置EIGRP( 关闭自动汇总), 使<br>得全网互通. 要求使用反掩码宣告准确的接口地址[R4<br>与运营商R5 的S0/0 接口不宣告]<br>R1的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">R1(config)#router eigrp 1</span><br><span class="line">R1(config-router)#no auto-summary</span><br><span class="line">R1(config-router)#network 10.1.1.1 0.0.0.0</span><br><span class="line">R1(config-router)#network 10.10.10.11 0.0.0.0</span><br><span class="line">R1(config-router)#network 172.16.1.1 0.0.0.0</span><br><span class="line">R1(config-router)#network 192.168.1.254 0.0.0.0</span><br></pre></td></tr></table></figure></p><p>R2的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R2(config)#router eigrp 1</span><br><span class="line">R2(config-router)#no auto-summary</span><br><span class="line">R2(config-router)#network 10.1.1.2 0.0.0.0</span><br><span class="line">R2(config-router)#network 10.2.2.2 0.0.0.0</span><br></pre></td></tr></table></figure></p><p>R3的配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">R3(config)#router eigrp 1</span><br><span class="line">R3(config-router)#no auto-summary</span><br><span class="line">R3(config-router)#network 10.2.2.3 0.0.0.0</span><br><span class="line">R3(config-router)#network 172.16.2.3 0.0.0.0</span><br><span class="line">R3(config-router)#network 192.168.2.254 0.0.0.0</span><br></pre></td></tr></table></figure></p><p>R4的配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R4(config)#router eigrp 1</span><br><span class="line">R4(config-router)#no auto-summary</span><br><span class="line">R4(config-router)#network 172.16.1.4 0.0.0.0</span><br><span class="line">R4(config-router)#network 172.16.2.4 0.0.0.0</span><br></pre></td></tr></table></figure></p><h6 id="EIGRP-非等价负载均衡"><a href="#EIGRP-非等价负载均衡" class="headerlink" title="EIGRP- 非等价负载均衡"></a>EIGRP- 非等价负载均衡</h6><h6 id="ACL"><a href="#ACL" class="headerlink" title="ACL"></a>ACL</h6><p>题目要求：<br>在R1上做ACL 访问限制: 所有用户都可以ping 通Server;除PC1 和PC4 以外, 其他用户都可以访问内部网站.<br>R1上的配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R1#configure terminal </span><br><span class="line">R1(config)#access-list 100 deny tcp host 192.168.1.1 host 10.10.10.10 eq www //禁止PC1访问服务器</span><br><span class="line">R1(config)#access-list 100 deny tcp host 192.168.2.2 host 10.10.10.10 eq www //禁止PC4访问服务器</span><br><span class="line">R1(config)#access-list 100 permit ip any any //允许其它的通过</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;拓扑图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-17.png&quot; alt=&quot;upload successful&quot;&gt;&lt;br&gt;思科模拟器上的是这样的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-18.png&quot; alt=&quot;upload successful&quot;&gt;&lt;br&gt;题目要求太多了，一点一点做起吧&lt;br&gt;
    
    </summary>
    
      <category term="思科" scheme="http://www.wangxuezhang.xin/categories/%E6%80%9D%E7%A7%91/"/>
    
    
      <category term="思科" scheme="http://www.wangxuezhang.xin/tags/%E6%80%9D%E7%A7%91/"/>
    
  </entry>
  
  <entry>
    <title>Python利用requests批量检测URL</title>
    <link href="http://www.wangxuezhang.xin/2018/01/02/Python%E5%88%A9%E7%94%A8requests%E6%89%B9%E9%87%8F%E6%A3%80%E6%B5%8BURL/"/>
    <id>http://www.wangxuezhang.xin/2018/01/02/Python利用requests批量检测URL/</id>
    <published>2018-01-02T12:33:00.000Z</published>
    <updated>2018-01-02T13:00:29.506Z</updated>
    
    <content type="html"><![CDATA[<h5 id="利用python的requests检测单个URL的返回值"><a href="#利用python的requests检测单个URL的返回值" class="headerlink" title="利用python的requests检测单个URL的返回值"></a>利用python的requests检测单个URL的返回值</h5><p>先安装所需要的requests库<br><code>pip install requests</code></p><p><img src="/images/pasted-14.png" alt="upload successful"></p><p>打开IDIE<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">response = requests.get(&quot;http://www.baidu.com&quot;)</span><br><span class="line">response.status_code</span><br></pre></td></tr></table></figure></p><p><img src="/images/pasted-16.png" alt="upload successful"><br>PS: response.status_code=200表示服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。<br><a id="more"></a></p><h5 id="批量检测URL"><a href="#批量检测URL" class="headerlink" title="批量检测URL"></a>批量检测URL</h5><p>直接上代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    &quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">with open(&apos;sort1.txt&apos;,&apos;r&apos;) as file:</span><br><span class="line">    urls = file.readlines()</span><br><span class="line">    for url in urls:</span><br><span class="line">        url = url.strip(&quot;\n&quot;).strip(&quot;\ufeff&quot;)</span><br><span class="line">        try:</span><br><span class="line">            response = requests.get(url,headers = headers,timeout = 3)</span><br><span class="line">            if response.status_code == 200:</span><br><span class="line">                print(&apos;success open++++&apos;+ url)</span><br><span class="line">                with open(&apos;success.txt&apos;,&apos;a&apos;) as file1:</span><br><span class="line">                    success = file1.write(url+&apos;\n&apos;)</span><br><span class="line">            else:</span><br><span class="line">                print(&apos;--------&apos;)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            with open(&apos;failed.txt&apos;,&apos;w&apos;) as file2:</span><br><span class="line">                error = file2.write(url + &quot;\n&quot;)</span><br></pre></td></tr></table></figure></p><p>这段代码中，把返回状态码为200的保存到了success.txt中，把异常的保存到了failed.txt中<br>但是，它虽然能达到检测的效果，但是有时候运行起来特别慢，还得多学习优化的方法</p><p>后续：<br>python还有其它方法也能检测URL的状态，日后会努力补上！</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;利用python的requests检测单个URL的返回值&quot;&gt;&lt;a href=&quot;#利用python的requests检测单个URL的返回值&quot; class=&quot;headerlink&quot; title=&quot;利用python的requests检测单个URL的返回值&quot;&gt;&lt;/a&gt;利用python的requests检测单个URL的返回值&lt;/h5&gt;&lt;p&gt;先安装所需要的requests库&lt;br&gt;&lt;code&gt;pip install requests&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-14.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
&lt;p&gt;打开IDIE&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response = requests.get(&amp;quot;http://www.baidu.com&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.status_code&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-16.png&quot; alt=&quot;upload successful&quot;&gt;&lt;br&gt;PS: response.status_code=200表示服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://www.wangxuezhang.xin/categories/python/"/>
    
    
      <category term="python" scheme="http://www.wangxuezhang.xin/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 生成不重复字符串组合</title>
    <link href="http://www.wangxuezhang.xin/2017/12/31/Python-%E7%94%9F%E6%88%90%E4%B8%8D%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%84%E5%90%88/"/>
    <id>http://www.wangxuezhang.xin/2017/12/31/Python-生成不重复字符串组合/</id>
    <published>2017-12-31T03:55:00.000Z</published>
    <updated>2017-12-31T04:20:54.405Z</updated>
    
    <content type="html"><![CDATA[<p>给出一个字符串，并利用python生成不重复字符串的所有组合<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import itertools  </span><br><span class="line">words = &apos;4189t&apos;  </span><br><span class="line">with open(&apos;sort1.txt&apos;,&apos;w&apos;) as file:</span><br><span class="line">    for i in itertools.permutations(words,5):</span><br><span class="line">        file.write(&quot;http://www.&quot;+&quot;&quot;.join(i)+&quot;.com\n&quot;)</span><br></pre></td></tr></table></figure></p><p> 我这里是生成字符串’4189t’的所有不重复字符串的组合，并且把所有组合方式导入到文件sort1.txt中，””.join(i)前后加的东西是我需要保存的链接形式.</p><p><img src="/images/pasted-13.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;给出一个字符串，并利用python生成不重复字符串的所有组合&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
      <category term="python" scheme="http://www.wangxuezhang.xin/categories/python/"/>
    
    
      <category term="python" scheme="http://www.wangxuezhang.xin/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>hexo s报错</title>
    <link href="http://www.wangxuezhang.xin/2017/12/30/hexo-s%E6%8A%A5%E9%94%99/"/>
    <id>http://www.wangxuezhang.xin/2017/12/30/hexo-s报错/</id>
    <published>2017-12-30T06:06:00.000Z</published>
    <updated>2017-12-30T06:41:02.924Z</updated>
    
    <content type="html"><![CDATA[<p>想起来就心痛，昨天由于ubuntu上的vim配置出了点问题，于是就想卸载重装，但是插件太多，自己又想偷懒，就一个命令运行下来<br><code>locate vimrc | xargs rm -rf</code><br>删除后发现还是报错，就将错就错,又是一条命令下来<br><code>locate vim | xargs rm -rf</code><br><a id="more"></a><br>就这样，成功的，我的vim重装后连insert都不显示了……</p><p><img src="/images/pasted-12.png" alt="upload successful"><br>费了好大功夫把vim装好后，准备运行hexo博客看一下<br><code>FATAL Cannot find module &#39;./vimeo&#39;Error: Cannot find module &#39;./vimeo&#39;</code></p><p><img src="/images/pasted-11.png" alt="upload successful"><br>结局是这样的,吓得我赶紧<code>npm install</code>重新安装依赖，但是还是没用<br><code>npm install --save vimeo</code>,命令是运行成功了，当然错误也是一样的…<br>去度娘逛了一圈，没有发现有人跟我报错是一样的（应该没有人像我那么傻，那么冲动…）<br>慌的我东西都备份好了，准备重装了，但是！！！重点来了，临死之前我的抢救还是成功了，<br><code>npm install hexo --vimeo</code><br>这样终于成功的安装好了这个模块,命令终于运行成功了，真是一把心酸一把泪啊！<br>以后再也不敢乱用删除命令了！！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想起来就心痛，昨天由于ubuntu上的vim配置出了点问题，于是就想卸载重装，但是插件太多，自己又想偷懒，就一个命令运行下来&lt;br&gt;&lt;code&gt;locate vimrc | xargs rm -rf&lt;/code&gt;&lt;br&gt;删除后发现还是报错，就将错就错,又是一条命令下来&lt;br&gt;&lt;code&gt;locate vim | xargs rm -rf&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.wangxuezhang.xin/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.wangxuezhang.xin/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo写博客的基本方法</title>
    <link href="http://www.wangxuezhang.xin/2017/12/28/hexo%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E6%B3%95/"/>
    <id>http://www.wangxuezhang.xin/2017/12/28/hexo写博客的基本方法/</id>
    <published>2017-12-28T07:34:00.000Z</published>
    <updated>2017-12-31T04:16:32.539Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h2><p>  刚刚搭建好hexo博客，准备写第一篇博客的时候意识到了一些问题，可能是因为自己没怎么用过markdown这个编辑器，所以不怎么熟悉，但是通过各种百度后终于知道了该怎么便捷的写自己的博客</p><h4 id="问题1：在哪里写博客？"><a href="#问题1：在哪里写博客？" class="headerlink" title="问题1：在哪里写博客？"></a>问题1：在哪里写博客？</h4><a id="more"></a><p>由于我的博客是搭在云服务器ubuntu上的，所以写博客的时候不可能直接进去用vim编辑吧，后面通过百度找到了解决办法 —安装hexo的admin后台</p><h6 id="安装hexo后端管理插件"><a href="#安装hexo后端管理插件" class="headerlink" title="安装hexo后端管理插件"></a>安装hexo后端管理插件</h6><p>npm install –save hexo-admin  —安装插件<br>hexo s                 —运行hexo服务器<br>本地打开<a href="http://localhost:4000/admin/" target="_blank" rel="noopener">http://localhost:4000/admin/</a> 就可以看到后台啦</p><h5 id="配置hexo后端管理插件"><a href="#配置hexo后端管理插件" class="headerlink" title="配置hexo后端管理插件"></a>配置hexo后端管理插件</h5><p>完成上述配置后，打开后台是不需要密码的，为了安全性起见，需要设置后台账号和密码<br>先进入后台，到setting中点击Setup authentification here<br><img src="/images/pasted-5.png" alt="upload successful"><br>进去之后是这样的</p><p><img src="/images/pasted-6.png" alt="upload successful"><br>在里面输入对应的信息,下面就会生成相应的代码，例如:</p><p><img src="/images/pasted-7.png" alt="upload successful"><br>把代码复制到hexo的_config.yml文件中，然后hexo s运行再进入后台就需要自己设置的账号和密码了</p><h4 id="问题2：markdown的一些语法要求"><a href="#问题2：markdown的一些语法要求" class="headerlink" title="问题2：markdown的一些语法要求"></a>问题2：markdown的一些语法要求</h4><p>准备自己编辑文章的时候发现不知怎么用markdown来写文章，于是去查看<a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">Markdown 语法说明</a><br>知道了怎么写小标题，举个例子</p><p><img src="/images/pasted-8.png" alt="upload successful"><br>一个#就是以及标题，两个#就二级标题，也就是说几个#对应几级标题，需要注意的是输入#的时候颜色会变成蓝色，要在#后面空格输入后的内容才是标题</p><h4 id="问题3：文中添加文字链接"><a href="#问题3：文中添加文字链接" class="headerlink" title="问题3：文中添加文字链接"></a>问题3：文中添加文字链接</h4><p>直接上图</p><p><img src="/images/pasted-9.png" alt="upload successful"></p><p><code>[这是链接的标题](这是url)</code><br>按照这个格式输入后就是点击链接标题就会跳转到相应的链接了</p><h4 id="问题4：如何设置阅读全文"><a href="#问题4：如何设置阅读全文" class="headerlink" title="问题4：如何设置阅读全文"></a>问题4：如何设置阅读全文</h4><p>next主题是默认展开全文的，文章多了就会显得特别繁琐，所以我们需要设置程这个样子</p><p><img src="/images/pasted-10.png" alt="upload successful"><br>方法很简单，只要在你想断开的地方输入<br><code>&lt;!--more--&gt;</code>就行了</p><h4 id="问题5：文中添加代码块"><a href="#问题5：文中添加代码块" class="headerlink" title="问题5：文中添加代码块"></a>问题5：文中添加代码块</h4><p>单行代码只需在代码前后添加一个`<br>多行代码需要在代码前后添加三个```</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言:&quot;&gt;&lt;/a&gt;前言:&lt;/h2&gt;&lt;p&gt;  刚刚搭建好hexo博客，准备写第一篇博客的时候意识到了一些问题，可能是因为自己没怎么用过markdown这个编辑器，所以不怎么熟悉，但是通过各种百度后终于知道了该怎么便捷的写自己的博客&lt;/p&gt;
&lt;h4 id=&quot;问题1：在哪里写博客？&quot;&gt;&lt;a href=&quot;#问题1：在哪里写博客？&quot; class=&quot;headerlink&quot; title=&quot;问题1：在哪里写博客？&quot;&gt;&lt;/a&gt;问题1：在哪里写博客？&lt;/h4&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.wangxuezhang.xin/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.wangxuezhang.xin/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>智动大闯关</title>
    <link href="http://www.wangxuezhang.xin/2017/12/27/%E6%99%BA%E5%8A%A8%E5%A4%A7%E9%97%AF%E5%85%B3/"/>
    <id>http://www.wangxuezhang.xin/2017/12/27/智动大闯关/</id>
    <published>2017-12-27T15:25:12.000Z</published>
    <updated>2017-12-27T15:34:04.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="智动大闯关第22关"><a href="#智动大闯关第22关" class="headerlink" title="智动大闯关第22关"></a>智动大闯关第22关</h2><p><img src="/images/pasted-1.png" alt="upload successful"><br>firebug 查看源码发现</p><p><img src="/images/pasted-3.png" alt="upload successful"><br>其中content里面的就是密码，直接提交进入第23关</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;智动大闯关第22关&quot;&gt;&lt;a href=&quot;#智动大闯关第22关&quot; class=&quot;headerlink&quot; title=&quot;智动大闯关第22关&quot;&gt;&lt;/a&gt;智动大闯关第22关&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-1.png&quot; alt=&quot;uploa
      
    
    </summary>
    
      <category term="智动大闯关" scheme="http://www.wangxuezhang.xin/categories/%E6%99%BA%E5%8A%A8%E5%A4%A7%E9%97%AF%E5%85%B3/"/>
    
    
      <category term="ctf" scheme="http://www.wangxuezhang.xin/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>阿里云ubuntu服务器搭建Hexo博客中遇到的问题</title>
    <link href="http://www.wangxuezhang.xin/2017/12/27/hello-world/"/>
    <id>http://www.wangxuezhang.xin/2017/12/27/hello-world/</id>
    <published>2017-12-27T09:28:00.000Z</published>
    <updated>2017-12-28T07:33:36.203Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建的环境"><a href="#搭建的环境" class="headerlink" title="搭建的环境:"></a>搭建的环境:</h2><p>阿里云的Ubuntu16.04 服务器</p><h2 id="搭建的流程"><a href="#搭建的流程" class="headerlink" title="搭建的流程:"></a>搭建的流程:</h2><a id="more"></a><p>搭建过程中还是蛮顺利的，直接参照百度就能跟着搭建出来。但是搭建后<br>hexo s 运行的时候出现了一个问题卡了蛮久的。hexo s 能正常运行，就是用电脑浏览器一直访问不了，换了各种端口都没用，关闭防火墙也没用。各种百度后找到了问题所在:就是阿里云服务器的安全组规则没有开启4000端口</p><p><img src="/images/pasted-4.png" alt="upload successful"><br>根据要求把4000端口开启就行了<br>然后就能通过IP访问刚刚建好的博客了，哈哈</p><h2 id="搭建后主题方面的设置"><a href="#搭建后主题方面的设置" class="headerlink" title="搭建后主题方面的设置"></a>搭建后主题方面的设置</h2><p>我选择的是next主题，参照hexo中文文档就<br><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">next中文文档</a><br>想进行一些特殊的设置可以参照<br><a href="http://blog.csdn.net/qq_33699981/article/details/72716951" target="_blank" rel="noopener"> hexo的next主题个性化教程：打造炫酷网站</a><br>一切搞好后，炫酷的博客就出炉啦</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搭建的环境&quot;&gt;&lt;a href=&quot;#搭建的环境&quot; class=&quot;headerlink&quot; title=&quot;搭建的环境:&quot;&gt;&lt;/a&gt;搭建的环境:&lt;/h2&gt;&lt;p&gt;阿里云的Ubuntu16.04 服务器&lt;/p&gt;
&lt;h2 id=&quot;搭建的流程&quot;&gt;&lt;a href=&quot;#搭建的流程&quot; class=&quot;headerlink&quot; title=&quot;搭建的流程:&quot;&gt;&lt;/a&gt;搭建的流程:&lt;/h2&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.wangxuezhang.xin/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.wangxuezhang.xin/tags/hexo/"/>
    
  </entry>
  
</feed>
